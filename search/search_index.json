{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"[dir=\"ltr\"] .md-sidebar--primary:not([hidden]) ~ .md-content > .md-content__inner { margin-left: 0;} :root >* { --md-default-bg-color: #161616; /* background */ --md-primary-bg-color: #fff; /* Title bar text */ --md-typeset-a-color: #aaa; /* Additional header text */ --md-typeset-color: #fff; /* nav text normal */ --md-accent-fg-color: #392fa4; /* text hover + highlight*/ --md-default-fg-color--lighter: #33f; /* Nav scroll bar */ --md-primary-bg-color--light: #fff; /* Search bar text */ --md-default-fg-color: #fff; /* Search result box section header */ --md-default-fg-color--light: #eee; /* Search box result text */ } div.md-source-file {color: black; margin-left: 1rem;} New User Experienced User Daffy is D eployment A utomation F ramework F or Y ou. A tool to do all the heavy lifting of the OpenShift and IBM Cloud Pak installs. The National Market Top Team created Daffy to assist the technical sales teams with the progression of IBM Cloud Pak opportunities. The goal is to provide the technical sales with a set of (easy to use) scripts that will aid in the installation of OpenShift and the IBM Cloud Pak's. Fit for purpose Using Daffy IBMers, business partners and customers are onboarded to IBM Cloud Pak's in less than a few hours, removing challenges that previously existing setting up OpenShift. .frame { width: 90%; margin: 40px auto; text-align: left; } button { margin: 5px; } .custom-btn { width: 200px; height: 40px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } } Important Daffy scripts were designed to help pre-sales(CTP/BP) with POC deployments. If you choose to use this in a production environment, you may, but it will be on the installer for support of that installation. IBM can not give support for daffy itself. As it relates to OpenShift and Cloud pak deployments, you can open ticket with IBM Support. The installer/business partner would need to verify the environment that it meets all HA , best practices, management aspects and security requirements. As this is a scripting engine, you have full access to the logic/code and have ability to make any changes you feel fit. If you do make any changes to the daffy engine outside of your cluster environment file, you are on your own, we will not be able to assistant with that environment. Please Refer to the Production Deployment Guides for the recommended approach when advising customers on how to deploy a Production Ready Environment. \u00b6","title":"Home"},{"location":"#daffy-scripts-were-designed-to-help-pre-salesctpbp-with-poc-deployments-if-you-choose-to-use-this-in-a-production-environment-you-may-but-it-will-be-on-the-installer-for-support-of-that-installation-ibm-can-not-give-support-for-daffy-itself-as-it-relates-to-openshift-and-cloud-pak-deployments-you-can-open-ticket-with-ibm-support-the-installerbusiness-partner-would-need-to-verify-the-environment-that-it-meets-all-ha-best-practices-management-aspects-and-security-requirements-as-this-is-a-scripting-engine-you-have-full-access-to-the-logiccode-and-have-ability-to-make-any-changes-you-feel-fit-if-you-do-make-any-changes-to-the-daffy-engine-outside-of-your-cluster-environment-file-you-are-on-your-own-we-will-not-be-able-to-assistant-with-that-environment-please-refer-to-the-production-deployment-guides-for-the-recommended-approach-when-advising-customers-on-how-to-deploy-a-production-ready-environment","text":"","title":"Daffy scripts were designed to help pre-sales(CTP/BP) with POC deployments. If you choose to use this in a production environment, you may, but it will be on the installer for support of that installation.  IBM can not give support for daffy itself. As it relates to OpenShift and Cloud pak deployments, you can open ticket with IBM Support. The installer/business partner would need to verify  the environment that it meets all HA , best practices, management aspects and security requirements. As this is a scripting engine, you have full access to the logic/code and have ability to make any changes you feel fit. If you do make any changes to the daffy engine outside of your cluster environment file, you are on your own, we will not be able to assistant with that environment.  Please Refer to the Production Deployment Guides for the recommended approach when advising customers on how to deploy a Production Ready Environment."},{"location":"Meet-the-Team/","text":"/* Three columns side by side */ .column { float: left; width:35%; margin-bottom: 16px; padding: 0 8px; } /* Display the columns below each other instead of side by side on small screens */ @media screen and (max-width: 650px) { .column { width: 100%; display: block; } } /* Add some shadows to create a card effect */ .card { box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); } /* Some left and right padding inside the container */ .container { padding: 0 16px; } /* Clear floats */ .container::after, .row::after { content: \"\"; clear: both; display: table; } .title { color: grey; } .button { border: none; outline: 0; display: inline-block; padding: 8px; color: white; background-color: #000; text-align: center; cursor: pointer; width: 100%; } .button:hover { background-color: #555; } Kyle Dawson Principal Automation Technical Specialist, IBM Technology, US National Market David Krier Principal Integration Technical Specialist, IBM Technology, US National Market Jeff Imholz Principal Automation Technical Specialist, IBM Technology, US National Market Sunil S. Patel Principal Technical Sales Manager, Data-AI-Automation Blackbelt team, IBM Technology, US National Market Greta Holland Associate AI Applications Technical Specialist, IBM Technology, US National Market Global Sales - Software Sales Taner Avci Brand Technical Sales Specialist Intern Daniel Schroedl Brand Technical Sales Specialist Intern Daffy the Mascot OpenShift Expert, IBM Technology, US National Market Global Sales - Software Sales","title":"Meet the Team"},{"location":"Cloud-Paks/","text":"Cloud Paks \u00b6 Business Automation Data Integration Watson AIOps WebSphere Automation .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } } What is required to deploy a Cloud Pak? \u00b6 Before you can deploy a cloud pak, you must have the following: You must have a cluster running \u00b6 An existing cluster in a supported provider Can be built with daffy or any other process IBM entitlement key \u00b6 You can obtain your existing entitlement key here: https://myibm.ibm.com/products-services/containerlibrary Important: If your installing on a customer owned platform account or an on-prem customer datacenter, you MUST instruct your customer to register for a trial account and use their pull secret for the install if they don't own the software. Do not use your own pull secret for customer engagements. NOTE: All IBMer's are entitled to an IBM Entitlement Key. Your key can ONLY be used for training and demo purposes. Do not provide your personal entitlement key to others. Warning For internal IBM use only, Link below will only work while in the IBM Network If customer or business partner does not have an IBM entitlement key, go to the following link to get one(IBM Internal Link) IBM Trial Software Process","title":"Index"},{"location":"Cloud-Paks/#cloud-paks","text":"Business Automation Data Integration Watson AIOps WebSphere Automation .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Cloud Paks"},{"location":"Cloud-Paks/#what-is-required-to-deploy-a-cloud-pak","text":"Before you can deploy a cloud pak, you must have the following:","title":"What is required to deploy a Cloud Pak?"},{"location":"Cloud-Paks/#you-must-have-a-cluster-running","text":"An existing cluster in a supported provider Can be built with daffy or any other process","title":"You must have a cluster running"},{"location":"Cloud-Paks/#ibm-entitlement-key","text":"You can obtain your existing entitlement key here: https://myibm.ibm.com/products-services/containerlibrary Important: If your installing on a customer owned platform account or an on-prem customer datacenter, you MUST instruct your customer to register for a trial account and use their pull secret for the install if they don't own the software. Do not use your own pull secret for customer engagements. NOTE: All IBMer's are entitled to an IBM Entitlement Key. Your key can ONLY be used for training and demo purposes. Do not provide your personal entitlement key to others. Warning For internal IBM use only, Link below will only work while in the IBM Network If customer or business partner does not have an IBM entitlement key, go to the following link to get one(IBM Internal Link) IBM Trial Software Process","title":"IBM entitlement key"},{"location":"Cloud-Paks/Business-Automation/","text":"Cloud Pak for Business Automation \u00b6 At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak Step 1: Deploy Cloud Pak \u00b6 Deploying the Cloud Pak for Business Automation only requires two entries to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh) CP4BA_VERSION= CP4BA_DEPLOYMENT_STARTER_SERVICE= With these two values, the daffy engine will be able to install the version of Cloud Pak for Business Automation and the and prepare for desired service. Optional you can specify IFIX: CP4BA_IFIX= Valid Options: CP4BA_VERSION= 21.0.3 22.0.1 CP4BA_IFIX= (Optional) IF005 IF007 IF008 CP4BA_DEPLOYMENT_STARTER_SERVICE content decisions content-decisions workflow samples You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4BA_VERSION=\"22.0.1\" #CP4BA_IFIX= CP4BA_DEPLOYMENT_STARTER_SERVICE=\"content\" Options for Cloud Pak Service Components CP4BA Version decisions odm,bai 22.0.1 or 21.0.3 content filenet,cmis,ier,tm,bai 22.0.1 or 21.0.3 content-decisions filenet,cmis,ier,tm,odm,bai 22.0.1 or 21.0.3 workflow workflow,workstreams,pfs,baw_authoring,case,bai 22.0.1 or 21.0.3 samples Depends on sample 21.0.3 or 21.0.1 Run the following command to deploy the Cloud Pak for Business Automation. /data/daffy/cp4ba/build.sh <ENVIRONMENT_NAME> When this step is complete, approx 10 minutes depending on your environment, you have the Cloud Pak running. This is just the core Cloud Pak operators, no service is running at this point. The cluster is now ready to deploy the service. At this stage, the cluster consist of IBM Foundation Services and the Cloud Pak for Business Automation operators in the following projects: cp4ba-starter ibm-common-services HTML Video embed Step 2: Deploy Services \u00b6 Deploying the service does not need any new values to your environment file (< ENVIRONMENT_NAME >-env.sh>). It will use the same values during the cloud pak deployment. CP4BA_VERSION= CP4BA_DEPLOYMENT_STARTER_SERVICE= With these two values, the daffy engine will be able to install the version of Cloud Pak for Business Automation and the desired service. Instead of using the include services, you can also deploy your own sample or the included sample CR files from daffy. CP4BA_DEPLOYMENT_STARTER_SERVICE= samples CP4BA_DEPLOYMENT_STARTER_SERVICE_SAMPLE= valid sample name in daffy samples folder Sample Name The value you use is without the .yaml in the name cd /data/daffy/cp4ba/templates/services/samples To use samples, you would give the name of the sample in this directory. ocp-starter-ocs-adp-bai-IF008 ocp-starter-ocs-bai-content-decisions-workflow-streams-IF007 ocp-starter-ocs-workflow-IF008 roks-starter-all-IF008 roks-starter-nfs-all-IF008 ocp-starter-ocs-all-22.0.1 roks-starter-ibm-all-22.0.1 This is just the daffy samples, you can create your own as well. Just put your CR in this folder and add your name to your env file. The given sample names tell you which platform, storage, service and version. Optional: If you want to deploy Open Prediction Service HUB(OPS), you can set this flag to setup it up in your cluster. CP4BA_ENABLE_SERVICE_OPS= Valid Options: CP4BA_VERSION= 21.0.3 | 22.0.1 CP4BA_DEPLOYMENT_STARTER_SERVICE= content decisions content-decisions workflow samples You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4BA_VERSION=\"22.0.1\" CP4BA_DEPLOYMENT_STARTER_SERVICE=\"content\" #CP4BA_DEPLOYMENT_STARTER_SERVICE_SAMPLE=roks-starter-ibm-all-22.0.1 #CP4BA_ENABLE_SERVICE_OPS=\"<true|false>\" Options for Services Service Components CP4BA Version decisions odm,bai 22.0.1 or 21.0.3 content filenet,cmis,ier,tm,bai 22.0.1 or 21.0.3 content-decisions filenet,cmis,ier,tm,odm,bai 22.0.1 or 21.0.3 workflow workflow,workstreams,pfs,baw_authoring,case,bai 22.0.1 or 21.0.3 samples Depends on sample 21.0.3 or 21.0.1 Be aware, this step is async, meaning that the daffy engine will deploy the service to the cluster and then complete. This only takes a few minutes to complete. When the deployment of the service script is done, the service is not running yet. Depending on your service, it can take from 1 hour to 6 to complete. You can use the status command below to watch its progress. Run the following command to deploy the Cloud Pak for Business Automation services. /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> HTML Video embed Step 3: Status of Deployment \u00b6 The service can take a few hours to complete, based on which one you chose to deploy. To help monitor the status of the service deployment you can run the help flag to see what flags you can use to get information on your service deployment. Run the following commands to check the Cloud Pak for Business Automation to see what command flags you can run /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> --help The following command will give you the status of all components for the service you deployed /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> --StarterStatus If you want to have a running job to refresh every few seconds, you can run the above command via the watch command. watch -c /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> --StarterStatus To find out the connection info to your new service, you can run the console flag to get user names, passwords and URLs to connect to. /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> --StarterConsole HTML Video embed","title":"Business Automation"},{"location":"Cloud-Paks/Business-Automation/#cloud-pak-for-business-automation","text":"At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak","title":"Cloud Pak for Business Automation"},{"location":"Cloud-Paks/Business-Automation/#step-1-deploy-cloud-pak","text":"Deploying the Cloud Pak for Business Automation only requires two entries to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh) CP4BA_VERSION= CP4BA_DEPLOYMENT_STARTER_SERVICE= With these two values, the daffy engine will be able to install the version of Cloud Pak for Business Automation and the and prepare for desired service. Optional you can specify IFIX: CP4BA_IFIX= Valid Options: CP4BA_VERSION= 21.0.3 22.0.1 CP4BA_IFIX= (Optional) IF005 IF007 IF008 CP4BA_DEPLOYMENT_STARTER_SERVICE content decisions content-decisions workflow samples You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4BA_VERSION=\"22.0.1\" #CP4BA_IFIX= CP4BA_DEPLOYMENT_STARTER_SERVICE=\"content\" Options for Cloud Pak Service Components CP4BA Version decisions odm,bai 22.0.1 or 21.0.3 content filenet,cmis,ier,tm,bai 22.0.1 or 21.0.3 content-decisions filenet,cmis,ier,tm,odm,bai 22.0.1 or 21.0.3 workflow workflow,workstreams,pfs,baw_authoring,case,bai 22.0.1 or 21.0.3 samples Depends on sample 21.0.3 or 21.0.1 Run the following command to deploy the Cloud Pak for Business Automation. /data/daffy/cp4ba/build.sh <ENVIRONMENT_NAME> When this step is complete, approx 10 minutes depending on your environment, you have the Cloud Pak running. This is just the core Cloud Pak operators, no service is running at this point. The cluster is now ready to deploy the service. At this stage, the cluster consist of IBM Foundation Services and the Cloud Pak for Business Automation operators in the following projects: cp4ba-starter ibm-common-services HTML Video embed","title":"Step 1: Deploy Cloud Pak"},{"location":"Cloud-Paks/Business-Automation/#step-2-deploy-services","text":"Deploying the service does not need any new values to your environment file (< ENVIRONMENT_NAME >-env.sh>). It will use the same values during the cloud pak deployment. CP4BA_VERSION= CP4BA_DEPLOYMENT_STARTER_SERVICE= With these two values, the daffy engine will be able to install the version of Cloud Pak for Business Automation and the desired service. Instead of using the include services, you can also deploy your own sample or the included sample CR files from daffy. CP4BA_DEPLOYMENT_STARTER_SERVICE= samples CP4BA_DEPLOYMENT_STARTER_SERVICE_SAMPLE= valid sample name in daffy samples folder Sample Name The value you use is without the .yaml in the name cd /data/daffy/cp4ba/templates/services/samples To use samples, you would give the name of the sample in this directory. ocp-starter-ocs-adp-bai-IF008 ocp-starter-ocs-bai-content-decisions-workflow-streams-IF007 ocp-starter-ocs-workflow-IF008 roks-starter-all-IF008 roks-starter-nfs-all-IF008 ocp-starter-ocs-all-22.0.1 roks-starter-ibm-all-22.0.1 This is just the daffy samples, you can create your own as well. Just put your CR in this folder and add your name to your env file. The given sample names tell you which platform, storage, service and version. Optional: If you want to deploy Open Prediction Service HUB(OPS), you can set this flag to setup it up in your cluster. CP4BA_ENABLE_SERVICE_OPS= Valid Options: CP4BA_VERSION= 21.0.3 | 22.0.1 CP4BA_DEPLOYMENT_STARTER_SERVICE= content decisions content-decisions workflow samples You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4BA_VERSION=\"22.0.1\" CP4BA_DEPLOYMENT_STARTER_SERVICE=\"content\" #CP4BA_DEPLOYMENT_STARTER_SERVICE_SAMPLE=roks-starter-ibm-all-22.0.1 #CP4BA_ENABLE_SERVICE_OPS=\"<true|false>\" Options for Services Service Components CP4BA Version decisions odm,bai 22.0.1 or 21.0.3 content filenet,cmis,ier,tm,bai 22.0.1 or 21.0.3 content-decisions filenet,cmis,ier,tm,odm,bai 22.0.1 or 21.0.3 workflow workflow,workstreams,pfs,baw_authoring,case,bai 22.0.1 or 21.0.3 samples Depends on sample 21.0.3 or 21.0.1 Be aware, this step is async, meaning that the daffy engine will deploy the service to the cluster and then complete. This only takes a few minutes to complete. When the deployment of the service script is done, the service is not running yet. Depending on your service, it can take from 1 hour to 6 to complete. You can use the status command below to watch its progress. Run the following command to deploy the Cloud Pak for Business Automation services. /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> HTML Video embed","title":"Step 2: Deploy Services"},{"location":"Cloud-Paks/Business-Automation/#step-3-status-of-deployment","text":"The service can take a few hours to complete, based on which one you chose to deploy. To help monitor the status of the service deployment you can run the help flag to see what flags you can use to get information on your service deployment. Run the following commands to check the Cloud Pak for Business Automation to see what command flags you can run /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> --help The following command will give you the status of all components for the service you deployed /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> --StarterStatus If you want to have a running job to refresh every few seconds, you can run the above command via the watch command. watch -c /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> --StarterStatus To find out the connection info to your new service, you can run the console flag to get user names, passwords and URLs to connect to. /data/daffy/cp4ba/service.sh <ENVIRONMENT_NAME> --StarterConsole HTML Video embed","title":"Step 3: Status of Deployment"},{"location":"Cloud-Paks/Data/","text":"Cloud Pak for Data \u00b6 At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak Step 1: Deploy Cloud Pak \u00b6 Deploying the Cloud Pak for Data requires one entries to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh). CP4D_VERSION= You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4D_VERSION=\"4.0.9\" With these values, the daffy engine will be able to install the version of Cloud Pak for Data and prepare for the desired services. CP4D Supported Version OCP Versions 4.0.9 4.6, 4.8 4.0.8 4.6, 4.8 4.0.7 4.6, 4.8 4.0.6 4.6, 4.8 4.0.5 4.6, 4.8 4.0.4 4.6, 4.8 4.0.3 4.6, 4.8 4.0.2 4.6 Run the following command to deploy the Cloud Pak for Data /data/daffy/cp4d/build.sh <ENVIRONMENT_NAME> When this step is complete, approx 60 minutes depending on your environment, you have the Cloud Pak running. This is just the core Cloud Pak operators, no service/pattern is running at this point. The cluster is now ready to deploy the services/patterns. At this stage, the cluster consist of bedrock operators and the Cloud Pak for Data operators in the following projects: cpd-instance cpd-operators ibm-common-services Step 2: Deploy Services \u00b6 Deploying the Cloud Pak for Data requires some entries to your environment file (< ENVIRONMENT_NAME >-env.sh). CP4D_ENABLE_SERVICE_WKS=<true|false> CP4D_ENABLE_SERVICE_WKC=<true|false> CP4D_ENABLE_SERVICE_DV=<true|false> CP4D_ENABLE_SERVICE_WS=<true|false> CP4D_ENABLE_SERVICE_SPSS=<true|false> CP4D_ENABLE_SERVICE_WML=<true|false> CP4D_ENABLE_SERVICE_DATASTAGE=<true|false> CP4D_ENABLE_SERVICE_DODS=<true|false> CP4D_ENABLE_SERVICE_DMC=<true|false> CP4D_ENABLE_SERVICE_COGNOS=<true|false> With these values, the daffy engine will be able to install the version of Cloud Pak for Data and prepare for the desired services. WKS - Watson Knowledge Studio WKC - Watson Knowledge Catalog DV - Data Virtualization WS - Watson Studio SPSS - Statistical Package for Social Sciences WML - Watson Machine Learning DataStage - DataStage DODS - Decision Optimization DMC - DB2 Management Console Cognos - Cognos Run the following command** to deploy the Cloud Pak for Data services. /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> Step 3: Status of Deployment \u00b6 The service can take a few hours to complete, based on which one you chose to deploy. To help monitor the status of the service deployment you can run the --help flag to see what flags you can use to get information on your service deployment. Run the following commands to check the Cloud Pak for Data to see what command flags you can run /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --help The following command will give you the status of all components for the pattern you deployed /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --AllStatus If you want to have a running job to refresh every few seconds, you can run the above command via the watch command. watch -c /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --AllStatus If you want to want to see more detail status on an individual service, you can run each service status. /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --WKCStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --WKSStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --WSStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --DVStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --WMLStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --SPSSStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --DataStageStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --DODSStatus /data/daffy/cp4d/build.sh <ENVIRONMENT_NAME> --Console","title":"Data"},{"location":"Cloud-Paks/Data/#cloud-pak-for-data","text":"At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak","title":"Cloud Pak for Data"},{"location":"Cloud-Paks/Data/#step-1-deploy-cloud-pak","text":"Deploying the Cloud Pak for Data requires one entries to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh). CP4D_VERSION= You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4D_VERSION=\"4.0.9\" With these values, the daffy engine will be able to install the version of Cloud Pak for Data and prepare for the desired services. CP4D Supported Version OCP Versions 4.0.9 4.6, 4.8 4.0.8 4.6, 4.8 4.0.7 4.6, 4.8 4.0.6 4.6, 4.8 4.0.5 4.6, 4.8 4.0.4 4.6, 4.8 4.0.3 4.6, 4.8 4.0.2 4.6 Run the following command to deploy the Cloud Pak for Data /data/daffy/cp4d/build.sh <ENVIRONMENT_NAME> When this step is complete, approx 60 minutes depending on your environment, you have the Cloud Pak running. This is just the core Cloud Pak operators, no service/pattern is running at this point. The cluster is now ready to deploy the services/patterns. At this stage, the cluster consist of bedrock operators and the Cloud Pak for Data operators in the following projects: cpd-instance cpd-operators ibm-common-services","title":"Step 1: Deploy Cloud Pak"},{"location":"Cloud-Paks/Data/#step-2-deploy-services","text":"Deploying the Cloud Pak for Data requires some entries to your environment file (< ENVIRONMENT_NAME >-env.sh). CP4D_ENABLE_SERVICE_WKS=<true|false> CP4D_ENABLE_SERVICE_WKC=<true|false> CP4D_ENABLE_SERVICE_DV=<true|false> CP4D_ENABLE_SERVICE_WS=<true|false> CP4D_ENABLE_SERVICE_SPSS=<true|false> CP4D_ENABLE_SERVICE_WML=<true|false> CP4D_ENABLE_SERVICE_DATASTAGE=<true|false> CP4D_ENABLE_SERVICE_DODS=<true|false> CP4D_ENABLE_SERVICE_DMC=<true|false> CP4D_ENABLE_SERVICE_COGNOS=<true|false> With these values, the daffy engine will be able to install the version of Cloud Pak for Data and prepare for the desired services. WKS - Watson Knowledge Studio WKC - Watson Knowledge Catalog DV - Data Virtualization WS - Watson Studio SPSS - Statistical Package for Social Sciences WML - Watson Machine Learning DataStage - DataStage DODS - Decision Optimization DMC - DB2 Management Console Cognos - Cognos Run the following command** to deploy the Cloud Pak for Data services. /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME>","title":"Step 2: Deploy Services"},{"location":"Cloud-Paks/Data/#step-3-status-of-deployment","text":"The service can take a few hours to complete, based on which one you chose to deploy. To help monitor the status of the service deployment you can run the --help flag to see what flags you can use to get information on your service deployment. Run the following commands to check the Cloud Pak for Data to see what command flags you can run /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --help The following command will give you the status of all components for the pattern you deployed /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --AllStatus If you want to have a running job to refresh every few seconds, you can run the above command via the watch command. watch -c /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --AllStatus If you want to want to see more detail status on an individual service, you can run each service status. /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --WKCStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --WKSStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --WSStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --DVStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --WMLStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --SPSSStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --DataStageStatus /data/daffy/cp4d/service.sh <ENVIRONMENT_NAME> --DODSStatus /data/daffy/cp4d/build.sh <ENVIRONMENT_NAME> --Console","title":"Step 3: Status of Deployment"},{"location":"Cloud-Paks/Integration/","text":"Cloud Pak for Integration \u00b6 At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak Step 1: Deploy Cloud Pak \u00b6 Deploying the Cloud Pak for Integration only requires one entry to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh) CP4I_VERSION= You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4I_VERSION=2021.4.1 With this one value, the daffy engine will be able to install the version of Cloud Pak for Integration and the Platform Navigator. The service consist of the following products. platform navigator CP4D Supported Version OCP Versions 2021.4.1 4.6, 4.8 2021.3.1 4.6, 4.8 2021.2.1 4.6, 4.8 Run the following command to deploy the Cloud Pak for Integration. /data/daffy/cp4i/build.sh <ENVIRONMENT_NAME> When this step is complete, up to an hour depending on your environment, you have the Cloud Pak running. This will install all of the Cloud Pak operators including foundational services and the Platform Navigator. The cluster is now ready to deploy additional services/patterns. At this stage, the cluster consists of common services and the Cloud Pak for Integration operators and some services in the following projects: cp4i ibm-common-services Step 2: Deploy Services \u00b6 Deploying the Cloud Pak for Integration requires some entries to your environment file ( -env.sh). The current services supported are App Connect Designer (ACEDESIGN), App Connect Dashboard (ACEDASH), Integration Asset Repository (ASSETREPO), Operations Dashboard Tracing (TRACING), Single Instance of MQ (MQSINGLE), API Connect (APIC), Cloud Native MQ HA (MQHA), and Event Streams (EVENTSTREAMS) CP4I_ENABLE_SERVICE_ACEDESIGN=<true|false> CP4I_ENABLE_SERVICE_ACEDASH=<true|false> CP4I_ENABLE_SERVICE_ASSETREPO=<true|false> CP4I_ENABLE_SERVICE_TRACING=<true|false> CP4I_ENABLE_SERVICE_MQSINGLE=<true|false> CP4I_ENABLE_SERVICE_APIC=<true|false> CP4I_ENABLE_SERVICE_MQHA=<true|false> CP4I_ENABLE_SERVICE_EVENTSTREAMS=<true|false> With these values, the daffy engine will be able to install the version of Cloud Pak for Integration and prepare for the desired services. ACEDESIGN - App Connect Designer ACEDASH - App Connect Dashboard ASSETREPO - Integration Asset Repository TRACING - Operations Dashboard Tracing MQSINGLE - Single Instance of MQ APIC - API Connect MQHA - Cloud Native MQ HA EVENTSTREAMS - Event Streams Run the following command to deploy the Cloud Pak for Integration services. /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> Step 3: Status of Deployment \u00b6 The service can take a few hours to complete, based on which one you chose to deploy. To help monitor the status of the CP4I service deployment you can run the help flag to see what flags you can use to get information on your service deployment. /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --help Run the following commands to check the Cloud Pak for Integration services installation progress. /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --AllStatus If you want to want to see more detail status on an individual service, you can run each service status. /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --AceDashStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --AceDesignStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --AssetRepoStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --TracingStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --MQSingleStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --APICStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --MQHAStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --EventStreamsStatus To find out the connection info to your Integration Platform Navigator instance, you can run the console flag to get user names, passwords and URLs to connect to. /data/daffy/cp4i/build.sh <ENVIRONMENT_NAME> --console","title":"Integration"},{"location":"Cloud-Paks/Integration/#cloud-pak-for-integration","text":"At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak","title":"Cloud Pak for Integration"},{"location":"Cloud-Paks/Integration/#step-1-deploy-cloud-pak","text":"Deploying the Cloud Pak for Integration only requires one entry to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh) CP4I_VERSION= You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4I_VERSION=2021.4.1 With this one value, the daffy engine will be able to install the version of Cloud Pak for Integration and the Platform Navigator. The service consist of the following products. platform navigator CP4D Supported Version OCP Versions 2021.4.1 4.6, 4.8 2021.3.1 4.6, 4.8 2021.2.1 4.6, 4.8 Run the following command to deploy the Cloud Pak for Integration. /data/daffy/cp4i/build.sh <ENVIRONMENT_NAME> When this step is complete, up to an hour depending on your environment, you have the Cloud Pak running. This will install all of the Cloud Pak operators including foundational services and the Platform Navigator. The cluster is now ready to deploy additional services/patterns. At this stage, the cluster consists of common services and the Cloud Pak for Integration operators and some services in the following projects: cp4i ibm-common-services","title":"Step 1: Deploy Cloud Pak"},{"location":"Cloud-Paks/Integration/#step-2-deploy-services","text":"Deploying the Cloud Pak for Integration requires some entries to your environment file ( -env.sh). The current services supported are App Connect Designer (ACEDESIGN), App Connect Dashboard (ACEDASH), Integration Asset Repository (ASSETREPO), Operations Dashboard Tracing (TRACING), Single Instance of MQ (MQSINGLE), API Connect (APIC), Cloud Native MQ HA (MQHA), and Event Streams (EVENTSTREAMS) CP4I_ENABLE_SERVICE_ACEDESIGN=<true|false> CP4I_ENABLE_SERVICE_ACEDASH=<true|false> CP4I_ENABLE_SERVICE_ASSETREPO=<true|false> CP4I_ENABLE_SERVICE_TRACING=<true|false> CP4I_ENABLE_SERVICE_MQSINGLE=<true|false> CP4I_ENABLE_SERVICE_APIC=<true|false> CP4I_ENABLE_SERVICE_MQHA=<true|false> CP4I_ENABLE_SERVICE_EVENTSTREAMS=<true|false> With these values, the daffy engine will be able to install the version of Cloud Pak for Integration and prepare for the desired services. ACEDESIGN - App Connect Designer ACEDASH - App Connect Dashboard ASSETREPO - Integration Asset Repository TRACING - Operations Dashboard Tracing MQSINGLE - Single Instance of MQ APIC - API Connect MQHA - Cloud Native MQ HA EVENTSTREAMS - Event Streams Run the following command to deploy the Cloud Pak for Integration services. /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME>","title":"Step 2: Deploy Services"},{"location":"Cloud-Paks/Integration/#step-3-status-of-deployment","text":"The service can take a few hours to complete, based on which one you chose to deploy. To help monitor the status of the CP4I service deployment you can run the help flag to see what flags you can use to get information on your service deployment. /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --help Run the following commands to check the Cloud Pak for Integration services installation progress. /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --AllStatus If you want to want to see more detail status on an individual service, you can run each service status. /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --AceDashStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --AceDesignStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --AssetRepoStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --TracingStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --MQSingleStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --APICStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --MQHAStatus /data/daffy/cp4i/service.sh <ENVIRONMENT_NAME> --EventStreamsStatus To find out the connection info to your Integration Platform Navigator instance, you can run the console flag to get user names, passwords and URLs to connect to. /data/daffy/cp4i/build.sh <ENVIRONMENT_NAME> --console","title":"Step 3: Status of Deployment"},{"location":"Cloud-Paks/Watson-AIOPS/","text":"Cloud Pak for Watson AI Ops \u00b6 At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak Step 1: Deploy Cloud Pak \u00b6 Deploying the Cloud Pak for Watson AIOps only requires one entry to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh) CP4WAIOPS_VERSION= You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4WAIOPS_VERSION=3.3.1 With this one value, the daffy engine will be able to install the version of Cloud Pak for Watson AI Ops and the Platform Navigator. Along with the base cloud pak components, the AI Manager will be installed. The service consist of the following products. AI Manager AIOps Supported Versions OCP Versions 3.2.0 4.8 3.3.1 4.8 Run the following command to deploy the Cloud Pak for Watson AIOps. /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> When this step is complete, up to an hour depending on your environment, you have the Cloud Pak running. This will install all of the Cloud Pak operators including foundational services and the Platform Navigator. The cluster is now ready to deploy additional services and or demos. At this stage, the cluster consists of common services and the Cloud Pak for Watson AIOps operators and some services in the following projects: cp4waiops ibm-common-services Step 2: Deploy Services \u00b6 The Event Manager for WatsonAIOps is an optional service deployment, that can be added to your WatsonAIOps Cloud Pak deployment. To deploy the Event Manager component of WatsonAIOps, you will need to set the flag within your environment file. Please Note: As of today, You can ONLY deploy the Event Manager service as an additional component to the Cloud Pak for Watson AIOps. Installing the Watson AIOps Cloud Pak will by default install the AI Manager component. It is not possible today, to only install the Event Manager component without the AI Manager. Here is the flag that will need to be set to enable the deployment of Event Manager with Watson AIOps. CP4WAIOPS_DEPLOY_EMGR=<true|false> Step 3: Status of Deployment \u00b6 The service can take a few hours to complete, based on which one you chose to deploy. To help monitor the status of the service/pattern deployment you can run the help flag to see what flags you can use to get information on your service/pattern deployment. /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> --help Run the following commands to check the Cloud Pak for Watson AIOps installation progress. /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> --status If you want to have a running job to refresh every few seconds, you can run the status script using the watch command. watch -c /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> --status To find out the connection info to your new service/pattern, you can run the console flag to get user names, passwords and URLs to connect to. /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> --console","title":"Watson AIOPS"},{"location":"Cloud-Paks/Watson-AIOPS/#cloud-pak-for-watson-ai-ops","text":"At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak","title":"Cloud Pak for Watson AI Ops"},{"location":"Cloud-Paks/Watson-AIOPS/#step-1-deploy-cloud-pak","text":"Deploying the Cloud Pak for Watson AIOps only requires one entry to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh) CP4WAIOPS_VERSION= You can copy the following to your < ENVIRONMENT_NAME >-env.sh CP4WAIOPS_VERSION=3.3.1 With this one value, the daffy engine will be able to install the version of Cloud Pak for Watson AI Ops and the Platform Navigator. Along with the base cloud pak components, the AI Manager will be installed. The service consist of the following products. AI Manager AIOps Supported Versions OCP Versions 3.2.0 4.8 3.3.1 4.8 Run the following command to deploy the Cloud Pak for Watson AIOps. /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> When this step is complete, up to an hour depending on your environment, you have the Cloud Pak running. This will install all of the Cloud Pak operators including foundational services and the Platform Navigator. The cluster is now ready to deploy additional services and or demos. At this stage, the cluster consists of common services and the Cloud Pak for Watson AIOps operators and some services in the following projects: cp4waiops ibm-common-services","title":"Step 1: Deploy Cloud Pak"},{"location":"Cloud-Paks/Watson-AIOPS/#step-2-deploy-services","text":"The Event Manager for WatsonAIOps is an optional service deployment, that can be added to your WatsonAIOps Cloud Pak deployment. To deploy the Event Manager component of WatsonAIOps, you will need to set the flag within your environment file. Please Note: As of today, You can ONLY deploy the Event Manager service as an additional component to the Cloud Pak for Watson AIOps. Installing the Watson AIOps Cloud Pak will by default install the AI Manager component. It is not possible today, to only install the Event Manager component without the AI Manager. Here is the flag that will need to be set to enable the deployment of Event Manager with Watson AIOps. CP4WAIOPS_DEPLOY_EMGR=<true|false>","title":"Step 2: Deploy Services"},{"location":"Cloud-Paks/Watson-AIOPS/#step-3-status-of-deployment","text":"The service can take a few hours to complete, based on which one you chose to deploy. To help monitor the status of the service/pattern deployment you can run the help flag to see what flags you can use to get information on your service/pattern deployment. /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> --help Run the following commands to check the Cloud Pak for Watson AIOps installation progress. /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> --status If you want to have a running job to refresh every few seconds, you can run the status script using the watch command. watch -c /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> --status To find out the connection info to your new service/pattern, you can run the console flag to get user names, passwords and URLs to connect to. /data/daffy/cp4waiops/build.sh <ENVIRONMENT_FILE_PREFIX> --console","title":"Step 3: Status of Deployment"},{"location":"Cloud-Paks/WebSphere-Automation/","text":"Cloud Pak for WebSphere Automation \u00b6 At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak Step 1: Deploy WSA \u00b6 Deploying WebSphere Automation only requires one entry to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh) CPWSA_VERSION= You can copy the following to your < ENVIRONMENT_NAME >-env.sh CPWSA_VERSION=1.3 With this one value, the daffy engine will be able to install the version of WebSphere Automation. The service consist of the following products. WebSphere Automation Small Profile (consists of): WebSphere Automation WebSphere Health WebSphere Secure WSA Supported Versions OCP Versions 1.3 4.8 1.2 4.8 Run the following command to deploy WebSphere Automation /data/daffy/wsa/build.sh <ENVIRONMENT_NAME> When this step is complete, up to an hour depending on your environment, you have basics of WebSphere Automation running. This will install all of the operators including foundational services. The cluster is now ready to deploy additional services and or demos. At this stage, the cluster consists of common services and WebSphere Automation operators and some services in the following projects: websphere-automation ibm-common-services Step 2: Deploy Services \u00b6 Currently there one service / demos for WebSphere Automation. We are adding new features on a regular basis, please stay tuned. If you have a feature request for an additional service or demo, please fill out a request. Step 3: Status of Deployment \u00b6 The service can take a few hours to complete. To help monitor the status of the service/pattern deployment you can run the help flag to see what flags you can use to get information on your service/pattern deployment. /data/daffy/wsa/build.sh <ENVIRONMENT_NAME> --help Run the following commands to check the WebSphere Automation installation progress. /data/daffy/wsa/service.sh <ENVIRONMENT_NAME> --status If you want to have a running job to refresh every few seconds, you can run the status script using the watch command. watch -c /data/daffy/wsa/service.sh <ENVIRONMENT_NAME> --status To find out the connection info to your new service/pattern, you can run the console flag to get user names, passwords and URLs to connect to. /data/daffy/wsa/build.sh <ENVIRONMENT_NAME> --console","title":"WebSphere Automation"},{"location":"Cloud-Paks/WebSphere-Automation/#cloud-pak-for-websphere-automation","text":"At this point, you have a working OCP cluster on your platform of choice. Your < ENVIRONMENT_NAME >-env.sh configuration file will contain details of the platform and OCP installation. You will now add to this file, the details of: 1) The Cloud Pak info that you wish to install 2) The services that you wish to install on the Cloud Pak","title":"Cloud Pak for WebSphere Automation"},{"location":"Cloud-Paks/WebSphere-Automation/#step-1-deploy-wsa","text":"Deploying WebSphere Automation only requires one entry to your environment file (/data/daffy/env/< ENVIRONMENT_NAME >-env.sh) CPWSA_VERSION= You can copy the following to your < ENVIRONMENT_NAME >-env.sh CPWSA_VERSION=1.3 With this one value, the daffy engine will be able to install the version of WebSphere Automation. The service consist of the following products. WebSphere Automation Small Profile (consists of): WebSphere Automation WebSphere Health WebSphere Secure WSA Supported Versions OCP Versions 1.3 4.8 1.2 4.8 Run the following command to deploy WebSphere Automation /data/daffy/wsa/build.sh <ENVIRONMENT_NAME> When this step is complete, up to an hour depending on your environment, you have basics of WebSphere Automation running. This will install all of the operators including foundational services. The cluster is now ready to deploy additional services and or demos. At this stage, the cluster consists of common services and WebSphere Automation operators and some services in the following projects: websphere-automation ibm-common-services","title":"Step 1: Deploy WSA"},{"location":"Cloud-Paks/WebSphere-Automation/#step-2-deploy-services","text":"Currently there one service / demos for WebSphere Automation. We are adding new features on a regular basis, please stay tuned. If you have a feature request for an additional service or demo, please fill out a request.","title":"Step 2: Deploy Services"},{"location":"Cloud-Paks/WebSphere-Automation/#step-3-status-of-deployment","text":"The service can take a few hours to complete. To help monitor the status of the service/pattern deployment you can run the help flag to see what flags you can use to get information on your service/pattern deployment. /data/daffy/wsa/build.sh <ENVIRONMENT_NAME> --help Run the following commands to check the WebSphere Automation installation progress. /data/daffy/wsa/service.sh <ENVIRONMENT_NAME> --status If you want to have a running job to refresh every few seconds, you can run the status script using the watch command. watch -c /data/daffy/wsa/service.sh <ENVIRONMENT_NAME> --status To find out the connection info to your new service/pattern, you can run the console flag to get user names, passwords and URLs to connect to. /data/daffy/wsa/build.sh <ENVIRONMENT_NAME> --console","title":"Step 3: Status of Deployment"},{"location":"Deploying-OCP/","text":"Deploying OCP \u00b6 IBM Gym GCP Azure AWS VSphere ROKS TechZone .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Index"},{"location":"Deploying-OCP/#deploying-ocp","text":"IBM Gym GCP Azure AWS VSphere ROKS TechZone .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Deploying OCP"},{"location":"Deploying-OCP/AWS/","text":"AWS Install \u00b6 Step 1: Platform Requirements \u00b6 To use Daffy on Amazon Web Services , there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For AWS , it breaks down to the following basic three items: Account Details - The account that you plan to install OpenShift Permissions - The permissions need to perform the install Quota - The ability to add new workload to that platform For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements Step 2: Finding Provider Details \u00b6 To install Daffy on AWS , the hardest part can be finding the provider details in the portal. To create or use an existing AWS Access Key ID you can refer to this: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html?icmpid=docs_iam_console#Using_CreateAccessKey Note: Use the Identity and Access Management (IAM) service to manage access keys. Select Search - find IAM service You can create a new access key or use an existing key. The access key must have authority to the account you wan to install OpenShift into. Secret Access Key: The secret access key is ONLY displayed at the time of creation. When you create the access key, you will then have the opportunity to capture the secret access key Note: This is sensitive information, please make sure you store this in a secure location The screen to the right is an example of what you will see when you create a NEW access Key. Region: For you to use Daffy to install on AWS you need to choose a valid region identifier. This will be the target region you are planning to deploy OpenShift into. To see a complete list of available AWS Regions, you can select the region drop down list in the AWA Portal. This will be in the upper right hand corner next to your account name. (See picture to the right) Note: Take note of the region identifier such as: us-east-2. This is the value you would use to deploy a OCP cluster into the US East (Ohio) region. Permission: Within your AWS project, you would need to go to IAM Section and make sure the user that is associated with your Access Key is assigned the correct roles. At minimum, you need to have this role: AdministratorAccess Please see the requirements doc for more information! Hosted Zone: For each OpenShift deployment into AWS , you need to create a Route 53 Hosted Zone . Important : You must create a Hosted Zone that exactly matches your Base Domain. Important: Once you create your Hosted Zone, you must point your DNS registry Name Server records to the assigned AWS DNS Name Server records listed in this Hosted Zone. You will see the Name Servers listed once you have created the Hosted Zone. Setting up DNS for GCP Deployment with OpenShift: \u00b6 HTML Video embed Step 3: Environment File \u00b6 Below are the AWS specific environment variables that must be defined in the /data/daffy/env/< ENVIRONMENT_NAME >-env.sh file. AWS_REGION AWS_ACCESS_KEY_ID Note : You can look in the samples directory on your bastion for example of AWS install : /data/daffy/env/samples/ aws-ipi-env.sh You can run this command to build your new file from the sample. cp /data/daffy/env/samples/aws-ipi-env.sh /data/daffy/env/<ENVIRONMENT_NAME>-env.sh Valid Options: OCP_INSTALL_TYPE = aws-ipi AWS_REGION = AWS_ACCESS_KEY_ID = OCP_INSTALL_TYPE=\"aws-ipi\" AWS_REGION=\"<AWS-REGION>\" AWS_ACCESS_KEY_ID=\"<AWS-ACCESS_KEY-ID>\" #OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE=true Optional: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE =true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage Step 4: Execution \u00b6 To deploy your cluster, run the build.sh script from the /data/daffy/ocp directory. /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which as a number of options. Note: is the first part of your name that you used for the -env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"AWS"},{"location":"Deploying-OCP/AWS/#aws-install","text":"","title":"AWS Install"},{"location":"Deploying-OCP/AWS/#step-1-platform-requirements","text":"To use Daffy on Amazon Web Services , there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For AWS , it breaks down to the following basic three items: Account Details - The account that you plan to install OpenShift Permissions - The permissions need to perform the install Quota - The ability to add new workload to that platform For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements","title":"Step 1: Platform Requirements"},{"location":"Deploying-OCP/AWS/#step-2-finding-provider-details","text":"To install Daffy on AWS , the hardest part can be finding the provider details in the portal. To create or use an existing AWS Access Key ID you can refer to this: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html?icmpid=docs_iam_console#Using_CreateAccessKey Note: Use the Identity and Access Management (IAM) service to manage access keys. Select Search - find IAM service You can create a new access key or use an existing key. The access key must have authority to the account you wan to install OpenShift into. Secret Access Key: The secret access key is ONLY displayed at the time of creation. When you create the access key, you will then have the opportunity to capture the secret access key Note: This is sensitive information, please make sure you store this in a secure location The screen to the right is an example of what you will see when you create a NEW access Key. Region: For you to use Daffy to install on AWS you need to choose a valid region identifier. This will be the target region you are planning to deploy OpenShift into. To see a complete list of available AWS Regions, you can select the region drop down list in the AWA Portal. This will be in the upper right hand corner next to your account name. (See picture to the right) Note: Take note of the region identifier such as: us-east-2. This is the value you would use to deploy a OCP cluster into the US East (Ohio) region. Permission: Within your AWS project, you would need to go to IAM Section and make sure the user that is associated with your Access Key is assigned the correct roles. At minimum, you need to have this role: AdministratorAccess Please see the requirements doc for more information! Hosted Zone: For each OpenShift deployment into AWS , you need to create a Route 53 Hosted Zone . Important : You must create a Hosted Zone that exactly matches your Base Domain. Important: Once you create your Hosted Zone, you must point your DNS registry Name Server records to the assigned AWS DNS Name Server records listed in this Hosted Zone. You will see the Name Servers listed once you have created the Hosted Zone.","title":"Step 2: Finding Provider Details"},{"location":"Deploying-OCP/AWS/#setting-up-dns-for-gcp-deployment-with-openshift","text":"HTML Video embed","title":"Setting up DNS for GCP Deployment with OpenShift:"},{"location":"Deploying-OCP/AWS/#step-3-environment-file","text":"Below are the AWS specific environment variables that must be defined in the /data/daffy/env/< ENVIRONMENT_NAME >-env.sh file. AWS_REGION AWS_ACCESS_KEY_ID Note : You can look in the samples directory on your bastion for example of AWS install : /data/daffy/env/samples/ aws-ipi-env.sh You can run this command to build your new file from the sample. cp /data/daffy/env/samples/aws-ipi-env.sh /data/daffy/env/<ENVIRONMENT_NAME>-env.sh Valid Options: OCP_INSTALL_TYPE = aws-ipi AWS_REGION = AWS_ACCESS_KEY_ID = OCP_INSTALL_TYPE=\"aws-ipi\" AWS_REGION=\"<AWS-REGION>\" AWS_ACCESS_KEY_ID=\"<AWS-ACCESS_KEY-ID>\" #OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE=true Optional: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE =true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage","title":"Step 3: Environment File"},{"location":"Deploying-OCP/AWS/#step-4-execution","text":"To deploy your cluster, run the build.sh script from the /data/daffy/ocp directory. /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which as a number of options. Note: is the first part of your name that you used for the -env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Step 4: Execution"},{"location":"Deploying-OCP/Azure/","text":"Azure Install \u00b6 At this point, you have a bastion machine where you have installed the Daffy tool, created your core environment-name -env.sh and can execute the install of OCP on ROKS. Step 1: Platform Requirements \u00b6 To use Daffy on Azure , there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For Azure , it breaks down to the following basic three items: Account Details - The account that you plan to install OpenShift Permissions - The permissions need to perform the install Quota - The ability to add new workload to that platform For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements Step 2: Finding Provider Details \u00b6 To install Daffy on Azure, the hardest part can be finding the provider details. Subscription ID:Details coming soon !!! Client ID:Details coming soon !!! Client Secret:Details coming soon !!! Tenant ID:Details coming soon !!! Base Domain Resource Group Name:Details coming soon !!! Region:Details coming soon !!! Quota:Details coming soon !!! Permission: Within your Azure project, you would need to go to IAM Section and create/use Service Account. From the requirements doc, make sure your service account has the correct permissions. Dedicated public host Zone: You will need to create a DNS Zone within a new/existing resource group. For the OpenShift install, you need the following: Registered DNS Name - myexample.com Azure DNS Zone - myexample-com Transfer the domain to Azure Name services listed in your new Azure DNS Zone Setting up DNS for Azure Deployment with OpenShift: insert video Here Step 3: Environment File \u00b6 Deploying the OpenShift on Azure only requires three entries to your existing core environment file (< ENVIRONMENT_NAME >-env.sh) plus a local service account file. Note: You can look in the samples directory on your bastion for example of Azure install : /data/daffy/env/samples/ azure-ipi-env.sh You can copy the sample file to build your new environment file. OCP_INSTALL_TYPE=\"azure-ipi\" AZURE_SUBSCRIPTION_ID=\"999999-999999-999999-99999\" AZURE_CLIENT_ID=\"999999-999999-999999-99999\" AZURE_TENANT_ID=\"999999-999999-999999-99999\" AZURE_BASE_DOMAIN_RESOURCE_GROUP_NAME=\"<YOUR_RESOURCE_GROUP_FOR_DNS>\" AZURE_REGION=\"<YOUR_REGION>\" #OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE=true Valid Options: OCP_INSTALL_TYPE =\"azure-ipi\" AZURE_SUBSCRIPTION_ID =\" \" AZURE_CLIENT_ID =\" \" AZURE_TENANT_ID = \" AZURE_BASE_DOMAIN_RESOURCE_GROUP_NAME = \" AZURE_REGION =\" \" Optional: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE =true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage ** It will prompt you for the Client Secret during the install. Step 4: Execution \u00b6 To deploy your OCP cluster to Azure , run the build.sh script from the /data/daffy/ocp directory /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the < ENVIRONMENT_NAME >-env.sh file Here is a full example for deploying OpenShfit on Azure with the Daffy process. Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Azure"},{"location":"Deploying-OCP/Azure/#azure-install","text":"At this point, you have a bastion machine where you have installed the Daffy tool, created your core environment-name -env.sh and can execute the install of OCP on ROKS.","title":"Azure Install"},{"location":"Deploying-OCP/Azure/#step-1-platform-requirements","text":"To use Daffy on Azure , there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For Azure , it breaks down to the following basic three items: Account Details - The account that you plan to install OpenShift Permissions - The permissions need to perform the install Quota - The ability to add new workload to that platform For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements","title":"Step 1: Platform Requirements"},{"location":"Deploying-OCP/Azure/#step-2-finding-provider-details","text":"To install Daffy on Azure, the hardest part can be finding the provider details. Subscription ID:Details coming soon !!! Client ID:Details coming soon !!! Client Secret:Details coming soon !!! Tenant ID:Details coming soon !!! Base Domain Resource Group Name:Details coming soon !!! Region:Details coming soon !!! Quota:Details coming soon !!! Permission: Within your Azure project, you would need to go to IAM Section and create/use Service Account. From the requirements doc, make sure your service account has the correct permissions. Dedicated public host Zone: You will need to create a DNS Zone within a new/existing resource group. For the OpenShift install, you need the following: Registered DNS Name - myexample.com Azure DNS Zone - myexample-com Transfer the domain to Azure Name services listed in your new Azure DNS Zone Setting up DNS for Azure Deployment with OpenShift: insert video Here","title":"Step 2: Finding Provider Details"},{"location":"Deploying-OCP/Azure/#step-3-environment-file","text":"Deploying the OpenShift on Azure only requires three entries to your existing core environment file (< ENVIRONMENT_NAME >-env.sh) plus a local service account file. Note: You can look in the samples directory on your bastion for example of Azure install : /data/daffy/env/samples/ azure-ipi-env.sh You can copy the sample file to build your new environment file. OCP_INSTALL_TYPE=\"azure-ipi\" AZURE_SUBSCRIPTION_ID=\"999999-999999-999999-99999\" AZURE_CLIENT_ID=\"999999-999999-999999-99999\" AZURE_TENANT_ID=\"999999-999999-999999-99999\" AZURE_BASE_DOMAIN_RESOURCE_GROUP_NAME=\"<YOUR_RESOURCE_GROUP_FOR_DNS>\" AZURE_REGION=\"<YOUR_REGION>\" #OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE=true Valid Options: OCP_INSTALL_TYPE =\"azure-ipi\" AZURE_SUBSCRIPTION_ID =\" \" AZURE_CLIENT_ID =\" \" AZURE_TENANT_ID = \" AZURE_BASE_DOMAIN_RESOURCE_GROUP_NAME = \" AZURE_REGION =\" \" Optional: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE =true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage ** It will prompt you for the Client Secret during the install.","title":"Step 3: Environment File"},{"location":"Deploying-OCP/Azure/#step-4-execution","text":"To deploy your OCP cluster to Azure , run the build.sh script from the /data/daffy/ocp directory /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the < ENVIRONMENT_NAME >-env.sh file Here is a full example for deploying OpenShfit on Azure with the Daffy process. Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Step 4: Execution"},{"location":"Deploying-OCP/Core-steps/","text":"Step 1: Access your bastion Server \u00b6 Create Bastion Steps *** If you do not have a bastion, above button/link will walk you thru the process to create a Linux bastion server. Step 2: Install Daffy \u00b6 Log into your Bastion Machine (as root) and run the following command to download the latest Daffy Scripts. wget http://get.daffy-installer.com/download-scripts/daffy-init.sh; chmod 777 daffy-init.sh;./daffy-init.sh Optional: You may choose to use the Daffy Web Configurator! The purpose of this tool is to help you build an environment file Online Configurator Step 3: Create -env.sh \u00b6 DAFFY_UNIQUE_ID=\"<YourID@ibm.com>\" #This is required - Values POC/Demo/Enablement/HCCX/TechZone DAFFY_DEPLOYMENT_TYPE=\"\" #If POC/Demo, these are required. #ISC number must be 18 characters #DAFFY_ISC_NUMBER=\"0045h00000w1nvKAAG\" #DAFFY_CUSTOMER_NAME=\"Acme Customer\" BASE_DOMAIN=\"<YOUR.BASEDOMAIN.COM>\" CLUSTER_NAME=\"<ENVIRONMENT_NAME>\" OCP_RELEASE=\"4.8.36\" VM_TSHIRT_SIZE=\"Large\" This file is where you store values that will define your environment and Daffy will use to build your environment. Place your file in following folder with your environment name like the folling : /data/daffy/env/< ENVIRONMENT_NAME >-env.sh Best practices is < ENVIRONMENT_NAME > is your cluster name that will be used and you set in your file, but not required. Name Example Values Description DAFFY_DEPLOYMENT_TYPE Enablement POC/Demo/Enablement/HCCX/TechZone DAFFY_ISC_NUMBER $ISC_NUMBER} Required if Demo or POC DAFFY_CUSTOMER_NAME Acme Shoes Required if Demo or POC BASE_DOMAIN acme-shoes.com Is your DNS name your cluster will use CLUSTER_NAME demo01 The name you want to give your OpenShift Cluster OCP_RELEASE 4.10.17 What version of OpenShift you want to Install VM_TSHIRT_SIZE Large How large you want the OpenShift Cluster to be. Min and Large Supported today If MSP type install like ROKS, BASE_DOMAIN is not needed. Optionally: As a starting point, you can copy a sample environment file from the samples folder located here: /data/daffy/env/samples/ -env.sh cd /data/daffy/env/samples Replace these values for the next command. < platform > = This is the sample file name for the platform you are planning to deploy your OCP Cluster. < environment > = This is the name of your environment file. As a best practice, we recommend you use the name of your cluster. example: cp aws-ipi-env.sh ../demo01-env.sh This command will copy the sample file and place it in the /data/daffy/env directory (back one folder) cp <platform>-env.sh ../<environment>-env.sh You are NOW ready to begin making the necessary edits to your /data/daffy/env/< ENVIRONMENT_NAME >-env.sh file for a deployment of OCP to a specific platform. Step 4: Install OpenShift on your selected platform \u00b6 IBM Gym GCP Azure AWS VSphere ROKS TechZone .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Core Steps"},{"location":"Deploying-OCP/Core-steps/#step-1-access-your-bastion-server","text":"Create Bastion Steps *** If you do not have a bastion, above button/link will walk you thru the process to create a Linux bastion server.","title":"Step 1: Access your bastion Server"},{"location":"Deploying-OCP/Core-steps/#step-2-install-daffy","text":"Log into your Bastion Machine (as root) and run the following command to download the latest Daffy Scripts. wget http://get.daffy-installer.com/download-scripts/daffy-init.sh; chmod 777 daffy-init.sh;./daffy-init.sh Optional: You may choose to use the Daffy Web Configurator! The purpose of this tool is to help you build an environment file Online Configurator","title":"Step 2: Install Daffy"},{"location":"Deploying-OCP/Core-steps/#step-3-create-envsh","text":"DAFFY_UNIQUE_ID=\"<YourID@ibm.com>\" #This is required - Values POC/Demo/Enablement/HCCX/TechZone DAFFY_DEPLOYMENT_TYPE=\"\" #If POC/Demo, these are required. #ISC number must be 18 characters #DAFFY_ISC_NUMBER=\"0045h00000w1nvKAAG\" #DAFFY_CUSTOMER_NAME=\"Acme Customer\" BASE_DOMAIN=\"<YOUR.BASEDOMAIN.COM>\" CLUSTER_NAME=\"<ENVIRONMENT_NAME>\" OCP_RELEASE=\"4.8.36\" VM_TSHIRT_SIZE=\"Large\" This file is where you store values that will define your environment and Daffy will use to build your environment. Place your file in following folder with your environment name like the folling : /data/daffy/env/< ENVIRONMENT_NAME >-env.sh Best practices is < ENVIRONMENT_NAME > is your cluster name that will be used and you set in your file, but not required. Name Example Values Description DAFFY_DEPLOYMENT_TYPE Enablement POC/Demo/Enablement/HCCX/TechZone DAFFY_ISC_NUMBER $ISC_NUMBER} Required if Demo or POC DAFFY_CUSTOMER_NAME Acme Shoes Required if Demo or POC BASE_DOMAIN acme-shoes.com Is your DNS name your cluster will use CLUSTER_NAME demo01 The name you want to give your OpenShift Cluster OCP_RELEASE 4.10.17 What version of OpenShift you want to Install VM_TSHIRT_SIZE Large How large you want the OpenShift Cluster to be. Min and Large Supported today If MSP type install like ROKS, BASE_DOMAIN is not needed. Optionally: As a starting point, you can copy a sample environment file from the samples folder located here: /data/daffy/env/samples/ -env.sh cd /data/daffy/env/samples Replace these values for the next command. < platform > = This is the sample file name for the platform you are planning to deploy your OCP Cluster. < environment > = This is the name of your environment file. As a best practice, we recommend you use the name of your cluster. example: cp aws-ipi-env.sh ../demo01-env.sh This command will copy the sample file and place it in the /data/daffy/env directory (back one folder) cp <platform>-env.sh ../<environment>-env.sh You are NOW ready to begin making the necessary edits to your /data/daffy/env/< ENVIRONMENT_NAME >-env.sh file for a deployment of OCP to a specific platform.","title":"Step 3: Create -env.sh"},{"location":"Deploying-OCP/Core-steps/#step-4-install-openshift-on-your-selected-platform","text":"IBM Gym GCP Azure AWS VSphere ROKS TechZone .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Step 4: Install OpenShift on your selected platform"},{"location":"Deploying-OCP/GCP/","text":"GCP Install \u00b6 At this point, you have a bastion machine where you have installed the Daffy tool, created your core -env.sh and can execute the install of OCP on GCP . Step 1: Platform Requirements \u00b6 To use Daffy on G oogle C loud P latform, there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For GCP, it breaks down to the following basic three items: Account Details - The account that you plan to install OpenShift Permissions - The permissions need to perform the install Quota - The ability to add new workload to that platform For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements Step 2: Finding Provider Details \u00b6 To install Daffy on G oogle C loud P latform, the hardest part can be finding the provider details. Project ID To find your GCP project you can refer to this: https://cloud.google.com/resource-manager/docs/creating-managing-projects You can list your Project ID from the Drop down You can see your Project ID from the Dashboard Identifying a region or zone Each region in Compute Engine contains a number of zones. Each zone name contains two parts that describe each zone in detail. The first part of the zone name is the region and the second part of the name describes the zone in the region: Region Regions are collections of zones. Zones have high-bandwidth, low-latency network connections to other zones in the same region. In order to deploy fault-tolerant applications that have high availability, Google recommends deploying applications across multiple zones and multiple regions. This helps protect against unexpected failures of components, up to and including a single zone or region. Choose regions that makes sense for your scenario. For example, if you only have customers in the US, or if you have specific needs that require your data to live in the US, it makes sense to store your resources in zones in the us-central1 region or zones in the us-east1 region. Region: To find a list of regions, you can refer to this: https://cloud.google.com/compute/docs/regions-zones What are service accounts? A service account is a special kind of account used by an application or compute workload, such as a Compute Engine virtual machine (VM) instance, rather than a person. Applications use service accounts to make authorized API calls , authorized as either the service account itself, or as Google Workspace or Cloud Identity users through domain-wide delegation . Service Account: For you to use Daffy to install on GCP , you need to create a service account that has the correct permission to install. https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating Permission: Within your GCP project, you would need to go to IAM Section and create/use Service Account. From the requirements doc , make sure your service account has the correct permissions. API Services Enabled: For each GCP project, you need to enable API access. Within your GCP project, you would need to enable each API needed for the OpenShift install. From the requirements doc , you can search for each API and confirm/enable each API Service. Quota: For each GCP project, you need to enable API access. Within your GCP project, you would need to enable each API needed for the OpenShift install. From the requirements doc , you can search for each API and confirm/enable each API Service. Search for \"Quotas\" within your GCP project Select the \"All Quotas\" Search for the quota you are looking for Verify Limit/Used Percentage Once you open the \"All Quotas\" Page, you can search for each quota to see its limits. Dedicated public host Zone: You will need to create a DZS hosted Zone project. For the OpenShift install, you need the following: Registered DNS Name - myexample.com GCP DNS Zone - myexample-com Transfer the domain to GCP Name services listed in your new GCP DNS Zone Setting up DNS for GCP Deployment with OpenShift: Step 3: Environment File \u00b6 Deploying the OpenShift on GCP only requires three entries to your existing core environment file (< ENVIRONMENT_NAME >-env.sh) plus a local service account file. Note: You can look in the samples directory on your bastion for example of GCP install : /data/daffy/env/samples/ gcp-ipi-env.sh You can copy the sample file to build your new environment file. cp /data/daffy/env/samples/ gcp-ipi-env.sh /data/daffy/env/< ENVIRONMENT_NAME >-env.sh Valid Options: OCP_INSTALL_TYPE= gcp-ipi GCP_PROJECT_ID= GCP_REGION = Optional: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE =true OCP_INSTALL_TYPE=\"gcp-ipi\" GCP_PROJECT_ID=\"<YourGCPProjectID>\" GCP_REGION=\"<AnyValidGCPRegion>\" #OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE=true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage For GCP , you need to download your Service Key as well. Save this to your home path: ~/.gcp/osServiceAccount.json In your GCP project, go to IAM and Select Service accounts Select or Create new Service Account From the Service Account, select the Keys tab to create new Key. *** FYI after you create the Key, you can not view/download it. You can only get the details at the time of creation Step 4: Execution \u00b6 To deploy your OCP cluster to GCP, run the build.sh script from the /data/daffy/ocp directory /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the -env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"GCP"},{"location":"Deploying-OCP/GCP/#gcp-install","text":"At this point, you have a bastion machine where you have installed the Daffy tool, created your core -env.sh and can execute the install of OCP on GCP .","title":"GCP Install"},{"location":"Deploying-OCP/GCP/#step-1-platform-requirements","text":"To use Daffy on G oogle C loud P latform, there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For GCP, it breaks down to the following basic three items: Account Details - The account that you plan to install OpenShift Permissions - The permissions need to perform the install Quota - The ability to add new workload to that platform For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements","title":"Step 1: Platform Requirements"},{"location":"Deploying-OCP/GCP/#step-2-finding-provider-details","text":"To install Daffy on G oogle C loud P latform, the hardest part can be finding the provider details. Project ID To find your GCP project you can refer to this: https://cloud.google.com/resource-manager/docs/creating-managing-projects You can list your Project ID from the Drop down You can see your Project ID from the Dashboard Identifying a region or zone Each region in Compute Engine contains a number of zones. Each zone name contains two parts that describe each zone in detail. The first part of the zone name is the region and the second part of the name describes the zone in the region: Region Regions are collections of zones. Zones have high-bandwidth, low-latency network connections to other zones in the same region. In order to deploy fault-tolerant applications that have high availability, Google recommends deploying applications across multiple zones and multiple regions. This helps protect against unexpected failures of components, up to and including a single zone or region. Choose regions that makes sense for your scenario. For example, if you only have customers in the US, or if you have specific needs that require your data to live in the US, it makes sense to store your resources in zones in the us-central1 region or zones in the us-east1 region. Region: To find a list of regions, you can refer to this: https://cloud.google.com/compute/docs/regions-zones What are service accounts? A service account is a special kind of account used by an application or compute workload, such as a Compute Engine virtual machine (VM) instance, rather than a person. Applications use service accounts to make authorized API calls , authorized as either the service account itself, or as Google Workspace or Cloud Identity users through domain-wide delegation . Service Account: For you to use Daffy to install on GCP , you need to create a service account that has the correct permission to install. https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating Permission: Within your GCP project, you would need to go to IAM Section and create/use Service Account. From the requirements doc , make sure your service account has the correct permissions. API Services Enabled: For each GCP project, you need to enable API access. Within your GCP project, you would need to enable each API needed for the OpenShift install. From the requirements doc , you can search for each API and confirm/enable each API Service. Quota: For each GCP project, you need to enable API access. Within your GCP project, you would need to enable each API needed for the OpenShift install. From the requirements doc , you can search for each API and confirm/enable each API Service. Search for \"Quotas\" within your GCP project Select the \"All Quotas\" Search for the quota you are looking for Verify Limit/Used Percentage Once you open the \"All Quotas\" Page, you can search for each quota to see its limits. Dedicated public host Zone: You will need to create a DZS hosted Zone project. For the OpenShift install, you need the following: Registered DNS Name - myexample.com GCP DNS Zone - myexample-com Transfer the domain to GCP Name services listed in your new GCP DNS Zone Setting up DNS for GCP Deployment with OpenShift:","title":"Step 2: Finding Provider Details"},{"location":"Deploying-OCP/GCP/#step-3-environment-file","text":"Deploying the OpenShift on GCP only requires three entries to your existing core environment file (< ENVIRONMENT_NAME >-env.sh) plus a local service account file. Note: You can look in the samples directory on your bastion for example of GCP install : /data/daffy/env/samples/ gcp-ipi-env.sh You can copy the sample file to build your new environment file. cp /data/daffy/env/samples/ gcp-ipi-env.sh /data/daffy/env/< ENVIRONMENT_NAME >-env.sh Valid Options: OCP_INSTALL_TYPE= gcp-ipi GCP_PROJECT_ID= GCP_REGION = Optional: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE =true OCP_INSTALL_TYPE=\"gcp-ipi\" GCP_PROJECT_ID=\"<YourGCPProjectID>\" GCP_REGION=\"<AnyValidGCPRegion>\" #OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE=true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage For GCP , you need to download your Service Key as well. Save this to your home path: ~/.gcp/osServiceAccount.json In your GCP project, go to IAM and Select Service accounts Select or Create new Service Account From the Service Account, select the Keys tab to create new Key. *** FYI after you create the Key, you can not view/download it. You can only get the details at the time of creation","title":"Step 3: Environment File"},{"location":"Deploying-OCP/GCP/#step-4-execution","text":"To deploy your OCP cluster to GCP, run the build.sh script from the /data/daffy/ocp directory /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the -env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Step 4: Execution"},{"location":"Deploying-OCP/IBM-gym/","text":"IBM Gym \u00b6 Overview \u00b6 The OpenShift Gym is a learning environment offering individuals the ability to deploy virtual machines to support installation of IBM technologies such as OpenShift and Cloud Paks. The HCXX Gym has documentation on using daffy, below are some shortcuts for their instructions. Its same basic instructions based on VSphere, but they have some pre-built steps for Gym Members. Main Gym Page VMware IPI deployment - using DAFFY Prerequisites \u00b6 There are three options with TechZone Warning For internal IBM use only, Links may only work while in the IBM Network A Gym Membership request can be made by filling out the form. An active TECNet VPN ID is required to access and use the Gym. An email containing details on accessing the features of the OpenShift Gym is sent to the email address supplied once provisioning has completed. General information about the environment supplied is listed below. Refer to the provisioning email for detailed information. Connection \u00b6 Make Sure you are connected to the Technet VPN, in initial setup it may require you to reset your password. Launch your preferred Terminal Termius \u00b6 On the left tab click on hosts Click on + New Host Add the IP address that was given in the provisioning email Add password that was giving in the email Change port to 32222 Standard Terminal \u00b6 ssh admin@{Server IP address} -p 32222 Set Up \u00b6 Login as root \u00b6 After logging in as admin, switch to root user sudo su - Warning Before you can start with daffy, you must registry your RedHat Enterprise Linux(RHEL)( Here ) subscription-manager register --username <username> --password <password> --auto-attach Install latest daffy \u00b6 curl http://get.daffy-installer.com/download-scripts/daffy-init.sh | bash Copy environment file \u00b6 Next you will copy the prepopulated env file in your home directory to your daffy env directory cp ~/vmware-ipi-env.sh /data/daffy/env/{env-name}-env.sh You may make any changes needed in this file, add cloud paks, change sizing, etc. Deploying \u00b6 You can now run the daffy process /data/daffy/build.sh {env-name}","title":"IBM Gym"},{"location":"Deploying-OCP/IBM-gym/#ibm-gym","text":"","title":"IBM Gym"},{"location":"Deploying-OCP/IBM-gym/#overview","text":"The OpenShift Gym is a learning environment offering individuals the ability to deploy virtual machines to support installation of IBM technologies such as OpenShift and Cloud Paks. The HCXX Gym has documentation on using daffy, below are some shortcuts for their instructions. Its same basic instructions based on VSphere, but they have some pre-built steps for Gym Members. Main Gym Page VMware IPI deployment - using DAFFY","title":"Overview"},{"location":"Deploying-OCP/IBM-gym/#prerequisites","text":"There are three options with TechZone Warning For internal IBM use only, Links may only work while in the IBM Network A Gym Membership request can be made by filling out the form. An active TECNet VPN ID is required to access and use the Gym. An email containing details on accessing the features of the OpenShift Gym is sent to the email address supplied once provisioning has completed. General information about the environment supplied is listed below. Refer to the provisioning email for detailed information.","title":"Prerequisites"},{"location":"Deploying-OCP/IBM-gym/#connection","text":"Make Sure you are connected to the Technet VPN, in initial setup it may require you to reset your password. Launch your preferred Terminal","title":"Connection"},{"location":"Deploying-OCP/IBM-gym/#termius","text":"On the left tab click on hosts Click on + New Host Add the IP address that was given in the provisioning email Add password that was giving in the email Change port to 32222","title":"Termius"},{"location":"Deploying-OCP/IBM-gym/#standard-terminal","text":"ssh admin@{Server IP address} -p 32222","title":"Standard Terminal"},{"location":"Deploying-OCP/IBM-gym/#set-up","text":"","title":"Set Up"},{"location":"Deploying-OCP/IBM-gym/#login-as-root","text":"After logging in as admin, switch to root user sudo su - Warning Before you can start with daffy, you must registry your RedHat Enterprise Linux(RHEL)( Here ) subscription-manager register --username <username> --password <password> --auto-attach","title":"Login as root"},{"location":"Deploying-OCP/IBM-gym/#install-latest-daffy","text":"curl http://get.daffy-installer.com/download-scripts/daffy-init.sh | bash","title":"Install latest daffy"},{"location":"Deploying-OCP/IBM-gym/#copy-environment-file","text":"Next you will copy the prepopulated env file in your home directory to your daffy env directory cp ~/vmware-ipi-env.sh /data/daffy/env/{env-name}-env.sh You may make any changes needed in this file, add cloud paks, change sizing, etc.","title":"Copy environment file"},{"location":"Deploying-OCP/IBM-gym/#deploying","text":"You can now run the daffy process /data/daffy/build.sh {env-name}","title":"Deploying"},{"location":"Deploying-OCP/Pre-Built-Cluster/","text":"","title":"Pre Built Cluster"},{"location":"Deploying-OCP/Pre-Req/","text":"Daffy Pre-Requirements \u00b6 Whats is required to use Daffy? \u00b6 Before you can use the Daffy scripts, you must have the following. SSH client on your local workstation \u00b6 We highly recommend installing Termius as your SSH client. The Termius installer can be found here: Windows or Mac (Only the Free Version is needed) A Bastion Machine \u00b6 Create Bastion Instructions Ubuntu 20.04 (Minimum Requirements: 2 CPU, 2GB Memory) with full root access (VSphere-UPI, -IPI and -MSP) Ubuntu 20.04 (Minimum Requirements: 60+ CPU, 128GB+ Memory) with full root access (KVM-UPI) Ubuntu 20.04 (Minimum Requirements: 4+ CPU, 32GB+ Memory) with full root access (AirGap Bastion/Jump Box Mirror Registry) RHEL 8.X (Minimum Requirements: 2 CPU, 2GB Memory) with full root access (VSphere-UPI, -IPI and -MSP) Red Hat pull secret \u00b6 If you or your customer does not have a Red Hat pull secret. Sign up for 60 day trail for OpenShift: RedHat Pull secret Site Important: If your installing on a customer owned platform account or a on-prem customer datacenter, you MUST instruct your customer to register for a trial account and use their pull secret for the install. Do not use your own pull secret for customer engagements. \u200b\u200b\u200b\u200b Sign up for IBM / Red Hat partner program NOTE: All IBMer's are entitled to the Red Hat partner program. Your Red Hat pull secret can ONLY be used for training and demo purposes. Do not provide your personal pull secret to customers. If you have a Red Hat account, you can find your existing pull secret here. - Login to Red Hat - Scroll down the page until you see \"Tokens\" and download the pull secret. Accessing Red Hat entitlements from your IBM Cloud Paks: - Accessing-red-hat-entitlements-from-your-cloud-paks IBM Entitlement Key \u00b6 If you need to get your own IBM entitlement key you can get here . Copy to clipboard and save to a local file If you need create one for a customer you can submit request here. here . Customer can use these links to request their own trail keys here. here .","title":"Pre-Req"},{"location":"Deploying-OCP/Pre-Req/#daffy-pre-requirements","text":"","title":"Daffy Pre-Requirements"},{"location":"Deploying-OCP/Pre-Req/#whats-is-required-to-use-daffy","text":"Before you can use the Daffy scripts, you must have the following.","title":"Whats is required to use Daffy?"},{"location":"Deploying-OCP/Pre-Req/#ssh-client-on-your-local-workstation","text":"We highly recommend installing Termius as your SSH client. The Termius installer can be found here: Windows or Mac (Only the Free Version is needed)","title":"SSH client on your local workstation"},{"location":"Deploying-OCP/Pre-Req/#a-bastion-machine","text":"Create Bastion Instructions Ubuntu 20.04 (Minimum Requirements: 2 CPU, 2GB Memory) with full root access (VSphere-UPI, -IPI and -MSP) Ubuntu 20.04 (Minimum Requirements: 60+ CPU, 128GB+ Memory) with full root access (KVM-UPI) Ubuntu 20.04 (Minimum Requirements: 4+ CPU, 32GB+ Memory) with full root access (AirGap Bastion/Jump Box Mirror Registry) RHEL 8.X (Minimum Requirements: 2 CPU, 2GB Memory) with full root access (VSphere-UPI, -IPI and -MSP)","title":"A Bastion Machine"},{"location":"Deploying-OCP/Pre-Req/#red-hat-pull-secret","text":"If you or your customer does not have a Red Hat pull secret. Sign up for 60 day trail for OpenShift: RedHat Pull secret Site Important: If your installing on a customer owned platform account or a on-prem customer datacenter, you MUST instruct your customer to register for a trial account and use their pull secret for the install. Do not use your own pull secret for customer engagements. \u200b\u200b\u200b\u200b Sign up for IBM / Red Hat partner program NOTE: All IBMer's are entitled to the Red Hat partner program. Your Red Hat pull secret can ONLY be used for training and demo purposes. Do not provide your personal pull secret to customers. If you have a Red Hat account, you can find your existing pull secret here. - Login to Red Hat - Scroll down the page until you see \"Tokens\" and download the pull secret. Accessing Red Hat entitlements from your IBM Cloud Paks: - Accessing-red-hat-entitlements-from-your-cloud-paks","title":"Red Hat pull secret"},{"location":"Deploying-OCP/Pre-Req/#ibm-entitlement-key","text":"If you need to get your own IBM entitlement key you can get here . Copy to clipboard and save to a local file If you need create one for a customer you can submit request here. here . Customer can use these links to request their own trail keys here. here .","title":"IBM Entitlement Key"},{"location":"Deploying-OCP/ROKS/","text":"ROKS Install \u00b6 At this point, you have a bastion machine where you have installed the Daffy tool, created your core environment-name -env.sh and can execute the install of OCP on ROKS. Step 1: Platform Requirements \u00b6 To use Daffy to provision R ed H at O penShift K ubernetes S ervices on IBM Cloud (ROKS) , there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For ROKS, it breaks down to the following basic two items: Account Details - The account that you plan to install ROKS Account Type - The account type needed to perform the install For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements Step 2: Finding Provider Details \u00b6 To use Daffy to install ROKS, you must find the provider details. Luckily, Daffy automates this as it walks you through this process using ibmcloud CLI. Below are the steps you can use to make sure you use the right information. Account: To find more details IBM Cloud account and how to manage you can refer to this: https://cloud.ibm.com/docs/account?topic=account-account-getting-started You must have an IBMid before logging in and the link above can help create one. If you are an IBM employee, after the number will most likely be your name. You can list your Account ID from the Drop down Location/Zone: To find a list of available datacenter locations/zones, you can refer to this: https://cloud.ibm.com/docs/overview?topic=overview-locations#mzr-table Note: Daffy currently only supports single datacenter location installs with classic infrastructure Identifying a datacenter location/zone \u00b6 Regions are collections of zones. Zones have high-bandwidth, low-latency network connections to other zones in the same region. In order to deploy fault-tolerant applications that have high availability, IBM recommends deploying applications across multiple zones and multiple regions. This helps protect against unexpected failures of components, up to and including a single zone or region. Choose regions that makes sense for your scenario. For example, if you only have customers in the US, or if you have specific needs that require your data to live in the US, it makes sense to store your resources in zones in the dal13 zone or in the wdc07 zone. Daffy currently defaults to dal13 when deploying a ROKS cluster Account Type: For you to use Daffy to install on ROKS, you need to have a Pay-As-You-Go or subscription IBM Cloud account. https://cloud.ibm.com/docs/account?topic=account-accounts What are account types? \u00b6 Your IBM Cloud account includes many interacting components and systems for resource, user, and access management. Concepts like how certain components are connected or how access works help you in understanding how to set up your account type. Many features are free to use regardless of account type. Step 3: Environment File \u00b6 Deploying OpenShift on ROKS only requires one entry to your existing core environment file ( -env.sh). Note: You can look in the samples directory on your bastion for example of ROKS install : /data/daffy/env/samples/roks-msp-env.sh You can copy the sample file to build your new environment file. cp /data/daffy/env/samples/roks-msp-env.sh /data/daffy/env/<ENVIRONMENT_NAME>-env.sh Valid Options: OCP_INSTALL_TYPE= roks-msp Optional: ROKS_ZONE=dal13 OCP_INSTALL_TYPE=\"roks-msp\" #ROKS_ZONE=\"dal13\" Step 4: Execution \u00b6 To deploy your OCP cluster to ROKS, run the build.sh script from the /data/daffy/ocp directory. The installer will ask you a number of questions to login to ibmcloud via the CLI. When prompted with a region, select any but stay within your geography. For instance, us-south. This is used to talk with IBM Cloud via the right API endpoint. /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the -env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Here is a full example for deploying OpenShift on ROKS with the Daffy process. Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"ROKS"},{"location":"Deploying-OCP/ROKS/#roks-install","text":"At this point, you have a bastion machine where you have installed the Daffy tool, created your core environment-name -env.sh and can execute the install of OCP on ROKS.","title":"ROKS Install"},{"location":"Deploying-OCP/ROKS/#step-1-platform-requirements","text":"To use Daffy to provision R ed H at O penShift K ubernetes S ervices on IBM Cloud (ROKS) , there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For ROKS, it breaks down to the following basic two items: Account Details - The account that you plan to install ROKS Account Type - The account type needed to perform the install For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements","title":"Step 1: Platform Requirements"},{"location":"Deploying-OCP/ROKS/#step-2-finding-provider-details","text":"To use Daffy to install ROKS, you must find the provider details. Luckily, Daffy automates this as it walks you through this process using ibmcloud CLI. Below are the steps you can use to make sure you use the right information. Account: To find more details IBM Cloud account and how to manage you can refer to this: https://cloud.ibm.com/docs/account?topic=account-account-getting-started You must have an IBMid before logging in and the link above can help create one. If you are an IBM employee, after the number will most likely be your name. You can list your Account ID from the Drop down Location/Zone: To find a list of available datacenter locations/zones, you can refer to this: https://cloud.ibm.com/docs/overview?topic=overview-locations#mzr-table Note: Daffy currently only supports single datacenter location installs with classic infrastructure","title":"Step 2: Finding Provider Details"},{"location":"Deploying-OCP/ROKS/#identifying-a-datacenter-locationzone","text":"Regions are collections of zones. Zones have high-bandwidth, low-latency network connections to other zones in the same region. In order to deploy fault-tolerant applications that have high availability, IBM recommends deploying applications across multiple zones and multiple regions. This helps protect against unexpected failures of components, up to and including a single zone or region. Choose regions that makes sense for your scenario. For example, if you only have customers in the US, or if you have specific needs that require your data to live in the US, it makes sense to store your resources in zones in the dal13 zone or in the wdc07 zone. Daffy currently defaults to dal13 when deploying a ROKS cluster Account Type: For you to use Daffy to install on ROKS, you need to have a Pay-As-You-Go or subscription IBM Cloud account. https://cloud.ibm.com/docs/account?topic=account-accounts","title":"Identifying a datacenter location/zone"},{"location":"Deploying-OCP/ROKS/#what-are-account-types","text":"Your IBM Cloud account includes many interacting components and systems for resource, user, and access management. Concepts like how certain components are connected or how access works help you in understanding how to set up your account type. Many features are free to use regardless of account type.","title":"What are account types?"},{"location":"Deploying-OCP/ROKS/#step-3-environment-file","text":"Deploying OpenShift on ROKS only requires one entry to your existing core environment file ( -env.sh). Note: You can look in the samples directory on your bastion for example of ROKS install : /data/daffy/env/samples/roks-msp-env.sh You can copy the sample file to build your new environment file. cp /data/daffy/env/samples/roks-msp-env.sh /data/daffy/env/<ENVIRONMENT_NAME>-env.sh Valid Options: OCP_INSTALL_TYPE= roks-msp Optional: ROKS_ZONE=dal13 OCP_INSTALL_TYPE=\"roks-msp\" #ROKS_ZONE=\"dal13\"","title":"Step 3: Environment File"},{"location":"Deploying-OCP/ROKS/#step-4-execution","text":"To deploy your OCP cluster to ROKS, run the build.sh script from the /data/daffy/ocp directory. The installer will ask you a number of questions to login to ibmcloud via the CLI. When prompted with a region, select any but stay within your geography. For instance, us-south. This is used to talk with IBM Cloud via the right API endpoint. /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the -env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Here is a full example for deploying OpenShift on ROKS with the Daffy process. Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Step 4: Execution"},{"location":"Deploying-OCP/Restricted-Network/","text":"Info Detailed instruction's coming soon! Slide Show \u00b6 * {box-sizing:border-box} /* Slideshow container */ .slideshow-container { max-width: 1000px; position: relative; margin: auto; } /* Hide the images by default */ .mySlides { display: none; } /* Next & previous buttons */ .prev, .next { cursor: pointer; position: absolute; top: 50%; width: auto; margin-top: -22px; padding: 16px; color: white; font-weight: bold; font-size: 18px; transition: 0.6s ease; border-radius: 0 3px 3px 0; user-select: none; } /* Position the \"next button\" to the right */ .next { right: 0; border-radius: 3px 0 0 3px; } /* On hover, add a black background color with a little bit see-through */ .prev:hover, .next:hover { background-color: rgba(0,0,0,0.8); } /* Caption text */ .text { color: #f2f2f2; font-size: 15px; padding: 8px 12px; position: absolute; bottom: 8px; width: 100%; text-align: center; } /* Number text (1/3 etc) */ .numbertext { color: #f2f2f2; font-size: 12px; padding: 8px 12px; position: absolute; top: 0; } /* The dots/bullets/indicators */ .dot { cursor: pointer; height: 15px; width: 15px; margin: 0 2px; background-color: #bbb; border-radius: 50%; display: inline-block; transition: background-color 0.6s ease; } .active, .dot:hover { background-color: #717171; } /* Fading animation */ .fade { animation-name: fade; animation-duration: 1.5s; } @keyframes fade { from {opacity: .4} to {opacity: 1} } 1 / 3 Intro 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text \u276e \u276f let slideIndex = 1; showSlides(slideIndex); // Next/previous controls function plusSlides(n) { showSlides(slideIndex += n); } // Thumbnail image controls function currentSlide(n) { showSlides(slideIndex = n); } function showSlides(n) { let i; let slides = document.getElementsByClassName(\"mySlides\"); let dots = document.getElementsByClassName(\"dot\"); if (n > slides.length) {slideIndex = 1} if (n < 1) {slideIndex = slides.length} for (i = 0; i < slides.length; i++) { slides[i].style.display = \"none\"; } for (i = 0; i < dots.length; i++) { dots[i].className = dots[i].className.replace(\" active\", \"\"); } slides[slideIndex-1].style.display = \"block\"; dots[slideIndex-1].className += \" active\"; } Overview \u00b6 Environment File \u00b6 Mirror locally \u00b6 Export Files \u00b6 Move Files \u00b6 Prepare Bastion \u00b6 Build Local Mirror \u00b6 Install Cluster \u00b6","title":"Restricted Network"},{"location":"Deploying-OCP/Restricted-Network/#slide-show","text":"* {box-sizing:border-box} /* Slideshow container */ .slideshow-container { max-width: 1000px; position: relative; margin: auto; } /* Hide the images by default */ .mySlides { display: none; } /* Next & previous buttons */ .prev, .next { cursor: pointer; position: absolute; top: 50%; width: auto; margin-top: -22px; padding: 16px; color: white; font-weight: bold; font-size: 18px; transition: 0.6s ease; border-radius: 0 3px 3px 0; user-select: none; } /* Position the \"next button\" to the right */ .next { right: 0; border-radius: 3px 0 0 3px; } /* On hover, add a black background color with a little bit see-through */ .prev:hover, .next:hover { background-color: rgba(0,0,0,0.8); } /* Caption text */ .text { color: #f2f2f2; font-size: 15px; padding: 8px 12px; position: absolute; bottom: 8px; width: 100%; text-align: center; } /* Number text (1/3 etc) */ .numbertext { color: #f2f2f2; font-size: 12px; padding: 8px 12px; position: absolute; top: 0; } /* The dots/bullets/indicators */ .dot { cursor: pointer; height: 15px; width: 15px; margin: 0 2px; background-color: #bbb; border-radius: 50%; display: inline-block; transition: background-color 0.6s ease; } .active, .dot:hover { background-color: #717171; } /* Fading animation */ .fade { animation-name: fade; animation-duration: 1.5s; } @keyframes fade { from {opacity: .4} to {opacity: 1} } 1 / 3 Intro 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text 1 / 3 Caption Text \u276e \u276f let slideIndex = 1; showSlides(slideIndex); // Next/previous controls function plusSlides(n) { showSlides(slideIndex += n); } // Thumbnail image controls function currentSlide(n) { showSlides(slideIndex = n); } function showSlides(n) { let i; let slides = document.getElementsByClassName(\"mySlides\"); let dots = document.getElementsByClassName(\"dot\"); if (n > slides.length) {slideIndex = 1} if (n < 1) {slideIndex = slides.length} for (i = 0; i < slides.length; i++) { slides[i].style.display = \"none\"; } for (i = 0; i < dots.length; i++) { dots[i].className = dots[i].className.replace(\" active\", \"\"); } slides[slideIndex-1].style.display = \"block\"; dots[slideIndex-1].className += \" active\"; }","title":"Slide Show"},{"location":"Deploying-OCP/Restricted-Network/#overview","text":"","title":"Overview"},{"location":"Deploying-OCP/Restricted-Network/#environment-file","text":"","title":"Environment File"},{"location":"Deploying-OCP/Restricted-Network/#mirror-locally","text":"","title":"Mirror locally"},{"location":"Deploying-OCP/Restricted-Network/#export-files","text":"","title":"Export Files"},{"location":"Deploying-OCP/Restricted-Network/#move-files","text":"","title":"Move Files"},{"location":"Deploying-OCP/Restricted-Network/#prepare-bastion","text":"","title":"Prepare Bastion"},{"location":"Deploying-OCP/Restricted-Network/#build-local-mirror","text":"","title":"Build Local Mirror"},{"location":"Deploying-OCP/Restricted-Network/#install-cluster","text":"","title":"Install Cluster"},{"location":"Deploying-OCP/TechZone/","text":"TechZone Install \u00b6 At this point, you have a bastion machine where you have installed the Daffy tool, created your core < ENVIRONMENT_NAME >-env.sh. Depending on if you use TechZone to build your cluster, you may skip Daffy Step 1 that builds your cluster. You will not use the bastion to build your cluster, but follow the steps to have TechZone build your cluster. Once that is done, you would move on with the daffy process and install your cloud paks from your new bastion. Platform Requirements \u00b6 There are three options with TechZone Warning For internal IBM use only, Links may only work while in the IBM Network OpenShift Cluster via AWS, Azure ( Prebuilt Cluster) https://techzone.ibm.com/collection/third-party-cloud-openshift-clusters Does NOT include Bastion with request With this option, you will skip Daffy step 1 (Build cluster) as TechZone will build for you. (This would fail as you do not have access to create cluster with a techzone setup) You still need to have a bastion and core values in your < ENVIRONMENT_NAME >-env.sh Tech Zone VSphere ( Daffy build's cluster) https://techzone.ibm.com/collection/ocp-gymnasium Includes Bastion with request Once you create the request and the VSPhere environment has been provisioned, it will create your own bastion and give you the instructions on how to use Daffy in that environment with the prebuild < ENVIRONMENT_NAME >-env.sh. TechZone Roks ( Prebuilt Cluster) https://techzone.ibm.com/collection/custom-roks-vmware-requests Does NOT include Bastion with request With this option, you will skip Daffy step 1 (Build cluster) as TechZone will build for you (This will fail as you do not have access to create cluster with a techzone setup) Once you create the request, you would follow the same steps of ROKS with Daffy You still need to have a bastion and core values in your < ENVIRONMENT_NAME >-env.sh Extra setting to change in your environment file ROKS_PROVIDER= techzone DAFFY_DEPLOYMENT_TYPE= TechZone Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"TechZone"},{"location":"Deploying-OCP/TechZone/#techzone-install","text":"At this point, you have a bastion machine where you have installed the Daffy tool, created your core < ENVIRONMENT_NAME >-env.sh. Depending on if you use TechZone to build your cluster, you may skip Daffy Step 1 that builds your cluster. You will not use the bastion to build your cluster, but follow the steps to have TechZone build your cluster. Once that is done, you would move on with the daffy process and install your cloud paks from your new bastion.","title":"TechZone Install"},{"location":"Deploying-OCP/TechZone/#platform-requirements","text":"There are three options with TechZone Warning For internal IBM use only, Links may only work while in the IBM Network OpenShift Cluster via AWS, Azure ( Prebuilt Cluster) https://techzone.ibm.com/collection/third-party-cloud-openshift-clusters Does NOT include Bastion with request With this option, you will skip Daffy step 1 (Build cluster) as TechZone will build for you. (This would fail as you do not have access to create cluster with a techzone setup) You still need to have a bastion and core values in your < ENVIRONMENT_NAME >-env.sh Tech Zone VSphere ( Daffy build's cluster) https://techzone.ibm.com/collection/ocp-gymnasium Includes Bastion with request Once you create the request and the VSPhere environment has been provisioned, it will create your own bastion and give you the instructions on how to use Daffy in that environment with the prebuild < ENVIRONMENT_NAME >-env.sh. TechZone Roks ( Prebuilt Cluster) https://techzone.ibm.com/collection/custom-roks-vmware-requests Does NOT include Bastion with request With this option, you will skip Daffy step 1 (Build cluster) as TechZone will build for you (This will fail as you do not have access to create cluster with a techzone setup) Once you create the request, you would follow the same steps of ROKS with Daffy You still need to have a bastion and core values in your < ENVIRONMENT_NAME >-env.sh Extra setting to change in your environment file ROKS_PROVIDER= techzone DAFFY_DEPLOYMENT_TYPE= TechZone Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Platform Requirements"},{"location":"Deploying-OCP/VSphere/","text":"Step 1: Platform Requirements \u00b6 To install Daffy on VSphere , there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. There is a number of permissions you MUST have as a user on VCenter for deployment of OpenShift on VSphere. Please refer to the requirements document for the specific requirements for IPI or UPI installs on VSphere. https://ibm.box.com/v/DaffyProviderRequirements Step 2: Finding Provider Details \u00b6 To install Daffy on VSphere , the hardest part can be finding the provider details in the VCenter Console. Some of the variables are easily understood, but a few can be a bit tricky to find. Variable Name Info Install Type Required VSPHERE_DATASTORE This is the name of the VSphere Datastore IPI/UPI Yes VSPHERE_CLUSTER The VSphere cluster is NOT the same as your OpenShift Cluster name. This is variable is referring to the VSphere Cluster name. Note: This is the name of the VSphere Cluster IPI/UPI Yes VSPHERE_ISO_DATASTORE This is the name of the datastore where the the coreos iso is located IPI/UPI Yes VSPHERE_ISO_IMAGE_BASE This is the directory within the datastore where the iso image is located. IPI/UPI Yes VSPHERE_NETWORK1 This is the VSphere VLAN name IPI/UPI Yes VSPHERE_DATACENTER This is the name of the VSphere Datacenter IPI/UPI Yes VSPHERE_FOLDER This is the location of where you will store the NEW VM's. IPI/UPI Yes VSPHERE_API_VIP This is an UNUSED IP address that will be utilized by the OpenShift IPI installer to provision the API Virtual IP Address. IPI Yes VSPHERE_INGRESS This is an UNUSED IP address that will be utilized by the OpenShift IPI installer to provision the Ingress Virtual IP Address. IPI Yes Setting up DNS for VSphere Deployment with OpenShift: \u00b6 HTML Video embed Step 3: Environment File \u00b6 Below are the VSphere IPI specific environment variables that must be defined in the /data/daffy/env/< ENVIRONMENT_NAME >-env.sh file. Note: You can look in the samples directory on your bastion for example of VSphere install : /data/daffy/env/samples/ vsphere-ipi-env.sh Valid Options: VSPHERE_USERNAME=\"userid\" VSPHERE_HOSTNAME=\"vsphere-host-name\" VSPHERE_DATASTORE=\"datastore\" VSPHERE_CLUSTER=\"cluster-name\". VSPHERE_ISO_DATASTORE=\"iso-datastore\" VSPHERE_ISO_IMAGE_BASE=\"datastore-directory\" VSPHERE_NETWORK1=\"vlan-name\" VSPHERE_DATACENTER=\"vsphere-datacenter\" VSPHERE_FOLDER=\"/${VSPHERE_DATACENTER}/vm/${CLUSTER_NAME}\" VSPHERE_API_VIP=\"xx.xxx.xxx.xxx\" VSPHERE_INGRESS_VIP=\"xx.xxx.xxx\" #OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE=true Optional: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE =true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage Step 4: Execution \u00b6 To deploy your cluster, run the build.sh script from the /data/daffy/ocp directory. /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the < ENVIRONMENT_NAME >-env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Deploying an OpenShift cluster on VSphere using the Daffy Scripts. (Using VSPhere-IPI Install Type) Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"VSphere"},{"location":"Deploying-OCP/VSphere/#step-1-platform-requirements","text":"To install Daffy on VSphere , there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. There is a number of permissions you MUST have as a user on VCenter for deployment of OpenShift on VSphere. Please refer to the requirements document for the specific requirements for IPI or UPI installs on VSphere. https://ibm.box.com/v/DaffyProviderRequirements","title":"Step 1: Platform Requirements"},{"location":"Deploying-OCP/VSphere/#step-2-finding-provider-details","text":"To install Daffy on VSphere , the hardest part can be finding the provider details in the VCenter Console. Some of the variables are easily understood, but a few can be a bit tricky to find. Variable Name Info Install Type Required VSPHERE_DATASTORE This is the name of the VSphere Datastore IPI/UPI Yes VSPHERE_CLUSTER The VSphere cluster is NOT the same as your OpenShift Cluster name. This is variable is referring to the VSphere Cluster name. Note: This is the name of the VSphere Cluster IPI/UPI Yes VSPHERE_ISO_DATASTORE This is the name of the datastore where the the coreos iso is located IPI/UPI Yes VSPHERE_ISO_IMAGE_BASE This is the directory within the datastore where the iso image is located. IPI/UPI Yes VSPHERE_NETWORK1 This is the VSphere VLAN name IPI/UPI Yes VSPHERE_DATACENTER This is the name of the VSphere Datacenter IPI/UPI Yes VSPHERE_FOLDER This is the location of where you will store the NEW VM's. IPI/UPI Yes VSPHERE_API_VIP This is an UNUSED IP address that will be utilized by the OpenShift IPI installer to provision the API Virtual IP Address. IPI Yes VSPHERE_INGRESS This is an UNUSED IP address that will be utilized by the OpenShift IPI installer to provision the Ingress Virtual IP Address. IPI Yes","title":"Step 2: Finding Provider Details"},{"location":"Deploying-OCP/VSphere/#setting-up-dns-for-vsphere-deployment-with-openshift","text":"HTML Video embed","title":"Setting up DNS for VSphere Deployment with OpenShift:"},{"location":"Deploying-OCP/VSphere/#step-3-environment-file","text":"Below are the VSphere IPI specific environment variables that must be defined in the /data/daffy/env/< ENVIRONMENT_NAME >-env.sh file. Note: You can look in the samples directory on your bastion for example of VSphere install : /data/daffy/env/samples/ vsphere-ipi-env.sh Valid Options: VSPHERE_USERNAME=\"userid\" VSPHERE_HOSTNAME=\"vsphere-host-name\" VSPHERE_DATASTORE=\"datastore\" VSPHERE_CLUSTER=\"cluster-name\". VSPHERE_ISO_DATASTORE=\"iso-datastore\" VSPHERE_ISO_IMAGE_BASE=\"datastore-directory\" VSPHERE_NETWORK1=\"vlan-name\" VSPHERE_DATACENTER=\"vsphere-datacenter\" VSPHERE_FOLDER=\"/${VSPHERE_DATACENTER}/vm/${CLUSTER_NAME}\" VSPHERE_API_VIP=\"xx.xxx.xxx.xxx\" VSPHERE_INGRESS_VIP=\"xx.xxx.xxx\" #OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE=true Optional: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE =true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage","title":"Step 3: Environment File"},{"location":"Deploying-OCP/VSphere/#step-4-execution","text":"To deploy your cluster, run the build.sh script from the /data/daffy/ocp directory. /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the < ENVIRONMENT_NAME >-env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Deploying an OpenShift cluster on VSphere using the Daffy Scripts. (Using VSPhere-IPI Install Type) Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Step 4: Execution"},{"location":"Deploying-OCP/kvm/","text":"KVM Install \u00b6 At this point, you have a bastion machine where you have installed the Daffy tool, created your core environment-name -env.sh and can execute the install of OCP on ROKS. Step 1: Platform Requirements \u00b6 To use Daffy on K ernel-based V irtual M achine, there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For KVM , it breaks down to the following three basic items: Hardware - Enough to run the OCP Cluster based on T-Shirt Sizing OS Version - Ubuntu 20.0.4 Permission - Full root authority For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements Public DNS Setup: You will need to create a DNS entries and domain. For the OpenShift install, you need the following: Registered DNS Name - myexample.com DNS Entries- myexample-com api. . myexample.com ---> api-int. . myexample.com ---> *.apps. .myexample.com ---> Setting up DNS for KVM Deployment with OpenShift: INSERT VIDEO Here Step 2: Environment File \u00b6 Deploying the OpenShift on K ernel-based V irtual M achine only requires three entries to your existing core environment file ( -env.sh) plus a local service account file. Note: You can look in the samples directory on your bastion for example of K ernel-based V irtual M achine install : /data/daffy/env/samples/kvm-upi-env.sh You can copy the sample file to build your new environment file. cp /data/daffy/env/samples/kvm-upi-env.sh /data/daffy/env/ -env.sh Valid Options: OCP_INSTALL_TYPE= kvm-upi Optional: BASTION_HOST =\"xxx.xxx.xxx.xxx\" If your host does not have its own public IP address, you need to specify the bastion IP address that the OCP cluster would use to reach your Bastion host, its local IP address you used to connect to the bastion: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE= true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage Step 3: Execution \u00b6 To deploy your OCP cluster to Kernel-based Virtual Machine, run the build.sh script from the /data/daffy/ocp directory /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the -env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Here is a full example for deploying OpenShift on Kernel-based Virtual Machine with the Daffy process. Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"KVM"},{"location":"Deploying-OCP/kvm/#kvm-install","text":"At this point, you have a bastion machine where you have installed the Daffy tool, created your core environment-name -env.sh and can execute the install of OCP on ROKS.","title":"KVM Install"},{"location":"Deploying-OCP/kvm/#step-1-platform-requirements","text":"To use Daffy on K ernel-based V irtual M achine, there are some platform info and requirements that need to be gathered or met. We have a simple doc that you should refer to that list all providers and what would be needed. For KVM , it breaks down to the following three basic items: Hardware - Enough to run the OCP Cluster based on T-Shirt Sizing OS Version - Ubuntu 20.0.4 Permission - Full root authority For detailed list of the above, you can find in the Daffy Provider Requirements. Please review before proceeding. https://ibm.box.com/v/DaffyProviderRequirements Public DNS Setup: You will need to create a DNS entries and domain. For the OpenShift install, you need the following: Registered DNS Name - myexample.com DNS Entries- myexample-com api. . myexample.com ---> api-int. . myexample.com ---> *.apps. .myexample.com ---> Setting up DNS for KVM Deployment with OpenShift: INSERT VIDEO Here","title":"Step 1: Platform Requirements"},{"location":"Deploying-OCP/kvm/#step-2-environment-file","text":"Deploying the OpenShift on K ernel-based V irtual M achine only requires three entries to your existing core environment file ( -env.sh) plus a local service account file. Note: You can look in the samples directory on your bastion for example of K ernel-based V irtual M achine install : /data/daffy/env/samples/kvm-upi-env.sh You can copy the sample file to build your new environment file. cp /data/daffy/env/samples/kvm-upi-env.sh /data/daffy/env/ -env.sh Valid Options: OCP_INSTALL_TYPE= kvm-upi Optional: BASTION_HOST =\"xxx.xxx.xxx.xxx\" If your host does not have its own public IP address, you need to specify the bastion IP address that the OCP cluster would use to reach your Bastion host, its local IP address you used to connect to the bastion: OCP_CREATE_OPENSHIFT_CONTAINER_STORAGE= true If you plan to install a cloud pak and/or need storage, you need to set the flag to setup OCS Storage","title":"Step 2: Environment File"},{"location":"Deploying-OCP/kvm/#step-3-execution","text":"To deploy your OCP cluster to Kernel-based Virtual Machine, run the build.sh script from the /data/daffy/ocp directory /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> Once your cluster is fully deployed you can access the help menu which has a number of options. Note: is the first part of your name that you used for the -env.sh file /data/daffy/ocp/build.sh <ENVIRONMENT_NAME> --help Here is a full example for deploying OpenShift on Kernel-based Virtual Machine with the Daffy process. Installing Cloud Paks .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Step 3: Execution"},{"location":"More/Glossary/","text":"Glossary \u00b6 Bastion \u00b6 Content coming! Catalog \u00b6 Content coming! Cloud Pak \u00b6 IBM Cloud Paks are packaged based on solution domains and harness the combined power of container technology and IBM enterprise expertise to help organizations solve their most pressing challenges: IBM Cloud Pak\u00ae for Data: Unify cloud storage and simplify the collection, organization and analysis of data. IBM Cloud Pak\u00ae for Business Automation: Automate business operations to achieve better performance. IBM Cloud Pak\u00ae for Watson AIOps: Place AI at the core of your IT operations tool chain. Automate operations management decisions while resolving real-world operations management scenarios to deliver actionable insights. IBM Cloud Pak\u00ae for Integration: Automate application and data flows to improve client experiences. Connect your applications and data wherever they live. Get new tools for automated integrations based on APIs that extend capability and modernize flexibility for ongoing adaption. IBM Cloud Pak\u00ae for Security: Generate deeper insights into threats, and orchestrate actions for scalability and automated responses. IBM Cloud Pak\u00ae for Network Automation: Automate networks to deliver zero-touch operations. Cloud Provider \u00b6 A cloud service provider is a third-party company offering a cloud-based platform, infrastructure, application, or storage services. Much like a homeowner would pay for a utility such as electricity or gas, companies typically have to pay only for the amount of cloud services they use, as business demands require. Besides the pay-per-use model, cloud service providers also give companies a wide range of benefits. Businesses can take advantage of scalability and flexibility by not being limited to physical constraints of on-premises servers, the reliability of multiple data centers with multiple redundancies, customization by configuring servers to your preferences, and responsive load balancing that can easily respond to changing demands. Though businesses should also evaluate security considerations of storing information in the cloud to ensure industry-recommended access and compliance management configurations and practices are enacted and met. In a nutshell, Cluster \u00b6 Multiple computing nodes or hosts that work together to support an application or middleware such as a database. A cluster is a group of inter-connected computers or hosts that work together to support applications and middleware (e.g. databases). In a cluster, each computer is referred to as a \u201cnode\u201d. Unlike grid computers, where each node performs a different task, computer clusters assign the same task to each node. Nodes in a cluster are usually connected to each other through high-speed local area networks. Each node runs its own instance of an operating system. A computer cluster may range from a simple two-node system connecting two personal computers to a supercomputer with a cluster architecture. Computer clusters are often used for cost-effective high-performance computing (HPC) and high availability (HA). If a single component fails in a computer cluster, the other nodes continue to provide uninterrupted processing. A computer cluster can provide faster processing speed, larger storage capacity, better data integrity, greater reliability and wider availability of resources. Computer clusters are usually dedicated to specific functions, such as load balancing, high availability, high performance or large-scale processing. In a nutshell, Control Plane \u00b6 Content coming! Domain Name System (DNS) \u00b6 The Domain Name System (DNS) is the hierarchical and decentralized naming system used to identify computers, servr ices, and other resources reachable through the Internet or other Internet Protocol (IP) networks. The resource records contained in the DNS associate domain names with other forms of information. These are most commonly used to map human-friendly domain names to the numerical IP addresses computers need to locate services and devices using the underlying network protocols, but have been extended over time to perform many other functions as well. In a nutshell, its a system where your local computer can call other computers on the internet to translate a website name to a computer IP address. Think of it as the internet phone book. https://en.wikipedia.org/wiki/Domain_Name_System DNS Registrar/Registry \u00b6 A domain name registrar is a company that manages the reservation of Internet domain names. A domain name registrar must be accredited by a generic top-level domain (gTLD) registry or a country code top-level domain (ccTLD) registry. A registrar operates in accordance with the guidelines of the designated domain name registries. In a nutshell, its a company where you can buy and register a website name. Like \"mywebsite.com\" You would now own that name and can have that name redirected to any computer IP address. A domain name registry is a database of all domain names and the associated registrant information in the top level domains of the Domain Name System (DNS) of the Internet that enables third party entities to request administrative control of a domain name. Most registries operate on the top-level and second-level of the DNS. In a nutshell, its where website names are stored and has a mapping from name to IP Address. Like \"www.mywebsite.com\" points to 169.45.45.55 https://en.wikipedia.org/wiki/Domain_name_registrar Enviornment Name/File \u00b6 You may see reference to , this is what you name your environment and the base name of the file to store your details for that environment. Example gamm01 -env.sh is your file where gamma01 is your Best practice, but not required, is to name your environment the same as your cluster as this is the core of your environment. Ingress Operator \u00b6 The Ingress Operator makes it possible for external clients to access your service by deploying and managing one or more HAProxy-based Ingress Controllers to handle routing. You can use the Ingress Operator to route traffic by specifying OpenShift Container Platform Route and Kubernetes Ingress resources. Configurations within the Ingress Controller, such as the ability to define endpointPublishingStrategy type and internal load balancing, provide ways to publish Ingress Controller endpoints. In a nutshell, it allows external access to your cluster and all the running pods/services/applications. Its basically an inbound router for your OpenShift Cluster. https://docs.openshift.com/container-platform/4.8/networking/ingress-operator.html Install Type IPI: \u00b6 Content coming! Instal Type MSP \u00b6 Content coming! Master Node \u00b6 The master node is responsible for running several Kubernetes processes that are absolutely necessary to run and manage the cluster properly: API Server: This is essentially the entry-point to the Kubernates cluster, which itself is a container. This is the process that allows communication between different Kubernetes clients and the cluster. The clients include the UI, if we are using the Kubernetes Dashboard, the API if we are running scripts, or the command-line tool. All these clients talk to the API Server to interact with the cluster. Controller Manager: This keeps track of the state of the cluster. It keeps an eye on the cluster and checks whether a node needs to be repaired or restarted. Scheduler: Scheduler ensures proper pod placement on the worker nodes based on several factors such as the available resources and the current load on the cluster. etcd: This is the key-value storage responsible for holding the state of the cluster at any given time. etcd has the configuration information and status data of each node in the cluster. etcd snapshots allow us to recover the whole cluster state, hence it is used in backing up and restoring a cluster. Namespace \u00b6 Content coming! Node \u00b6 Content coming! Operator \u00b6 Content coming! Pod \u00b6 Pods are the smallest deployable units of computing that you can create and manage in Kubernetes. A Pod (as in a pod of whales or pea pod) is a group of one or more containers, with shared storage and network resources, and a specification for how to run the containers. A Pod's contents are always co-located and co-scheduled, and run in a shared context. A Pod models an application-specific \"logical host\" it contains one or more application containers which are relatively tightly coupled. In non-cloud contexts, applications executed on the same physical or virtual machine are analogous to cloud applications executed on the same logical host. As well as application containers, a Pod can contain init containers that run during Pod startup. You can also inject ephemeral containers for debugging if your cluster offers this. In a nutshell, Service \u00b6 Content coming! Suscription \u00b6 Content coming! Storage Class \u00b6 A StorageClass provides a way for administrators to describe the \"classes\" of storage they offer. Different classes might map to quality-of-service levels, or to backup policies, or to arbitrary policies determined by the cluster administrators. Kubernetes itself is unopinionated about what classes represent. This concept is sometimes called \"profiles\" in other storage systems. In a nutshell, Worker Node \u00b6 The worker nodes are the part of the Kubernetes clusters which actually execute the containers and applications on them. They have two main components, the Kubelet Service and the Kube-proxy Service. Kubelet Service: Each worker node has a Kubelet process running on it that allows the cluster to talk to each other and execute some tasks on the worker nodes, such as running application processes. It listens for instructions from the Api Server and manages containers running on the node. Kube-proxy Service: The Kube-Proxy Service is responsible for enabling communication between services within the cluster. These worker nodes have docker containers for each application running on them. There may be a different number of containers running on each node depending on the distribution of the workload. Worker nodes are generally more powerful than master nodes because they have to run hundreds of clusters on them. However, master nodes hold more significance because they manage the distribution of workload and the state of the cluster.","title":"Glossary"},{"location":"More/Glossary/#glossary","text":"","title":"Glossary"},{"location":"More/Glossary/#bastion","text":"Content coming!","title":"Bastion"},{"location":"More/Glossary/#catalog","text":"Content coming!","title":"Catalog"},{"location":"More/Glossary/#cloud-pak","text":"IBM Cloud Paks are packaged based on solution domains and harness the combined power of container technology and IBM enterprise expertise to help organizations solve their most pressing challenges: IBM Cloud Pak\u00ae for Data: Unify cloud storage and simplify the collection, organization and analysis of data. IBM Cloud Pak\u00ae for Business Automation: Automate business operations to achieve better performance. IBM Cloud Pak\u00ae for Watson AIOps: Place AI at the core of your IT operations tool chain. Automate operations management decisions while resolving real-world operations management scenarios to deliver actionable insights. IBM Cloud Pak\u00ae for Integration: Automate application and data flows to improve client experiences. Connect your applications and data wherever they live. Get new tools for automated integrations based on APIs that extend capability and modernize flexibility for ongoing adaption. IBM Cloud Pak\u00ae for Security: Generate deeper insights into threats, and orchestrate actions for scalability and automated responses. IBM Cloud Pak\u00ae for Network Automation: Automate networks to deliver zero-touch operations.","title":"Cloud Pak"},{"location":"More/Glossary/#cloud-provider","text":"A cloud service provider is a third-party company offering a cloud-based platform, infrastructure, application, or storage services. Much like a homeowner would pay for a utility such as electricity or gas, companies typically have to pay only for the amount of cloud services they use, as business demands require. Besides the pay-per-use model, cloud service providers also give companies a wide range of benefits. Businesses can take advantage of scalability and flexibility by not being limited to physical constraints of on-premises servers, the reliability of multiple data centers with multiple redundancies, customization by configuring servers to your preferences, and responsive load balancing that can easily respond to changing demands. Though businesses should also evaluate security considerations of storing information in the cloud to ensure industry-recommended access and compliance management configurations and practices are enacted and met. In a nutshell,","title":"Cloud Provider"},{"location":"More/Glossary/#cluster","text":"Multiple computing nodes or hosts that work together to support an application or middleware such as a database. A cluster is a group of inter-connected computers or hosts that work together to support applications and middleware (e.g. databases). In a cluster, each computer is referred to as a \u201cnode\u201d. Unlike grid computers, where each node performs a different task, computer clusters assign the same task to each node. Nodes in a cluster are usually connected to each other through high-speed local area networks. Each node runs its own instance of an operating system. A computer cluster may range from a simple two-node system connecting two personal computers to a supercomputer with a cluster architecture. Computer clusters are often used for cost-effective high-performance computing (HPC) and high availability (HA). If a single component fails in a computer cluster, the other nodes continue to provide uninterrupted processing. A computer cluster can provide faster processing speed, larger storage capacity, better data integrity, greater reliability and wider availability of resources. Computer clusters are usually dedicated to specific functions, such as load balancing, high availability, high performance or large-scale processing. In a nutshell,","title":"Cluster"},{"location":"More/Glossary/#control-plane","text":"Content coming!","title":"Control Plane"},{"location":"More/Glossary/#domain-name-system-dns","text":"The Domain Name System (DNS) is the hierarchical and decentralized naming system used to identify computers, servr ices, and other resources reachable through the Internet or other Internet Protocol (IP) networks. The resource records contained in the DNS associate domain names with other forms of information. These are most commonly used to map human-friendly domain names to the numerical IP addresses computers need to locate services and devices using the underlying network protocols, but have been extended over time to perform many other functions as well. In a nutshell, its a system where your local computer can call other computers on the internet to translate a website name to a computer IP address. Think of it as the internet phone book. https://en.wikipedia.org/wiki/Domain_Name_System","title":"Domain Name System (DNS)"},{"location":"More/Glossary/#dns-registrarregistry","text":"A domain name registrar is a company that manages the reservation of Internet domain names. A domain name registrar must be accredited by a generic top-level domain (gTLD) registry or a country code top-level domain (ccTLD) registry. A registrar operates in accordance with the guidelines of the designated domain name registries. In a nutshell, its a company where you can buy and register a website name. Like \"mywebsite.com\" You would now own that name and can have that name redirected to any computer IP address. A domain name registry is a database of all domain names and the associated registrant information in the top level domains of the Domain Name System (DNS) of the Internet that enables third party entities to request administrative control of a domain name. Most registries operate on the top-level and second-level of the DNS. In a nutshell, its where website names are stored and has a mapping from name to IP Address. Like \"www.mywebsite.com\" points to 169.45.45.55 https://en.wikipedia.org/wiki/Domain_name_registrar","title":"DNS Registrar/Registry"},{"location":"More/Glossary/#enviornment-namefile","text":"You may see reference to , this is what you name your environment and the base name of the file to store your details for that environment. Example gamm01 -env.sh is your file where gamma01 is your Best practice, but not required, is to name your environment the same as your cluster as this is the core of your environment.","title":"Enviornment Name/File"},{"location":"More/Glossary/#ingress-operator","text":"The Ingress Operator makes it possible for external clients to access your service by deploying and managing one or more HAProxy-based Ingress Controllers to handle routing. You can use the Ingress Operator to route traffic by specifying OpenShift Container Platform Route and Kubernetes Ingress resources. Configurations within the Ingress Controller, such as the ability to define endpointPublishingStrategy type and internal load balancing, provide ways to publish Ingress Controller endpoints. In a nutshell, it allows external access to your cluster and all the running pods/services/applications. Its basically an inbound router for your OpenShift Cluster. https://docs.openshift.com/container-platform/4.8/networking/ingress-operator.html","title":"Ingress Operator"},{"location":"More/Glossary/#install-type-ipi","text":"Content coming!","title":"Install Type IPI:"},{"location":"More/Glossary/#instal-type-msp","text":"Content coming!","title":"Instal Type MSP"},{"location":"More/Glossary/#master-node","text":"The master node is responsible for running several Kubernetes processes that are absolutely necessary to run and manage the cluster properly: API Server: This is essentially the entry-point to the Kubernates cluster, which itself is a container. This is the process that allows communication between different Kubernetes clients and the cluster. The clients include the UI, if we are using the Kubernetes Dashboard, the API if we are running scripts, or the command-line tool. All these clients talk to the API Server to interact with the cluster. Controller Manager: This keeps track of the state of the cluster. It keeps an eye on the cluster and checks whether a node needs to be repaired or restarted. Scheduler: Scheduler ensures proper pod placement on the worker nodes based on several factors such as the available resources and the current load on the cluster. etcd: This is the key-value storage responsible for holding the state of the cluster at any given time. etcd has the configuration information and status data of each node in the cluster. etcd snapshots allow us to recover the whole cluster state, hence it is used in backing up and restoring a cluster.","title":"Master Node"},{"location":"More/Glossary/#namespace","text":"Content coming!","title":"Namespace"},{"location":"More/Glossary/#node","text":"Content coming!","title":"Node"},{"location":"More/Glossary/#operator","text":"Content coming!","title":"Operator"},{"location":"More/Glossary/#pod","text":"Pods are the smallest deployable units of computing that you can create and manage in Kubernetes. A Pod (as in a pod of whales or pea pod) is a group of one or more containers, with shared storage and network resources, and a specification for how to run the containers. A Pod's contents are always co-located and co-scheduled, and run in a shared context. A Pod models an application-specific \"logical host\" it contains one or more application containers which are relatively tightly coupled. In non-cloud contexts, applications executed on the same physical or virtual machine are analogous to cloud applications executed on the same logical host. As well as application containers, a Pod can contain init containers that run during Pod startup. You can also inject ephemeral containers for debugging if your cluster offers this. In a nutshell,","title":"Pod"},{"location":"More/Glossary/#service","text":"Content coming!","title":"Service"},{"location":"More/Glossary/#suscription","text":"Content coming!","title":"Suscription"},{"location":"More/Glossary/#storage-class","text":"A StorageClass provides a way for administrators to describe the \"classes\" of storage they offer. Different classes might map to quality-of-service levels, or to backup policies, or to arbitrary policies determined by the cluster administrators. Kubernetes itself is unopinionated about what classes represent. This concept is sometimes called \"profiles\" in other storage systems. In a nutshell,","title":"Storage Class"},{"location":"More/Glossary/#worker-node","text":"The worker nodes are the part of the Kubernetes clusters which actually execute the containers and applications on them. They have two main components, the Kubelet Service and the Kube-proxy Service. Kubelet Service: Each worker node has a Kubelet process running on it that allows the cluster to talk to each other and execute some tasks on the worker nodes, such as running application processes. It listens for instructions from the Api Server and manages containers running on the node. Kube-proxy Service: The Kube-Proxy Service is responsible for enabling communication between services within the cluster. These worker nodes have docker containers for each application running on them. There may be a different number of containers running on each node depending on the distribution of the workload. Worker nodes are generally more powerful than master nodes because they have to run hundreds of clusters on them. However, master nodes hold more significance because they manage the distribution of workload and the state of the cluster.","title":"Worker Node"},{"location":"More/FAQ/Deployment-Estimates/","text":"Note Below are some estimates for Daffy T-Shirt sizes running on each cloud platform. These are rough examples, customer accounts may have more/less discounts then the estimates we obtained. These numbers are used to help prepare some high level cost estimates for POC's for OpenShift and IBM Cloud Paks. Google Cloud Platform \u00b6 Calculator T-Shirt Size 1 Hour 1 Day 1 Week 1 Month Large $6.69 $160.56 $1,123.92 $4,816.80 Estimate on 03-06-2022 Amazon Web Services \u00b6 Calculator T-Shirt Size 1 Hour 1 Day 1 Week 1 Month Large Coming Coming Coming Coming Azure \u00b6 Calculator T-Shirt Size 1 Hour 1 Day 1 Week 1 Month Large Coming Coming Coming Coming Red Hat OpenShift Kubernetes Services on IBM Cloud \u00b6 Calculator T-Shirt Size 1 Hour 1 Day 1 Week 1 Month Large $5.70 $136.80 $957.60 $4,104.00 Estimate on 03-07-2022","title":"Deployment Estimates"},{"location":"More/FAQ/Deployment-Estimates/#google-cloud-platform","text":"Calculator T-Shirt Size 1 Hour 1 Day 1 Week 1 Month Large $6.69 $160.56 $1,123.92 $4,816.80 Estimate on 03-06-2022","title":"Google Cloud Platform"},{"location":"More/FAQ/Deployment-Estimates/#amazon-web-services","text":"Calculator T-Shirt Size 1 Hour 1 Day 1 Week 1 Month Large Coming Coming Coming Coming","title":"Amazon Web Services"},{"location":"More/FAQ/Deployment-Estimates/#azure","text":"Calculator T-Shirt Size 1 Hour 1 Day 1 Week 1 Month Large Coming Coming Coming Coming","title":"Azure"},{"location":"More/FAQ/Deployment-Estimates/#red-hat-openshift-kubernetes-services-on-ibm-cloud","text":"Calculator T-Shirt Size 1 Hour 1 Day 1 Week 1 Month Large $5.70 $136.80 $957.60 $4,104.00 Estimate on 03-07-2022","title":"Red Hat OpenShift Kubernetes Services on IBM Cloud"},{"location":"More/FAQ/FAQ/","text":"Why the name Daffy? \u00b6 Its a great name and mascot. What is your favorite Cloud Pak? \u00b6 Cloud Pak for Business Automation Can this be run on the XBOX platform? \u00b6 No, sorry. Daffy Slack Channels: \u00b6 #daffy-user-group The refresh.sh is hangs when I try to update daffy code. \u00b6 If the /data/daffy/refresh.sh hangs or does not work, you can run the following command to put latest version of daffy: curl http://get.daffy-installer.com/download-scripts/daffy-init.sh | bash I put invalid or wrong Red Hat Pull Secret during the OCP install process, how do you fix? \u00b6 1) Edit your ~/.profile and remove the following line export PULL_SECRET= 2) Save file 3) run this command to remove value from memory unset PULL_SECRET 4) Run the Daffy process again I put invalid or wrong IBM Entitlment during the CP install process, how do you fix? \u00b6 1) Edit your ~/.profile and remove the following line export IBM_ENTITLEMENT_KEY= 2) Save file 3) run this command to remove value from memory unset IBM_ENTITLEMENT_KEY 4) Run the Daffy process again How can I create my own bastion? \u00b6 We have a document outlining how to create your own bastion in two ways: (1) through a paid IBM Cloud Account and (2) through IBM Technology Zone. Click here to access the document. ROKS unbound immediate PersistentVolumeClaims \u00b6 This means the cluster has requested storage from MSP provider(IBM ROKS) and it is still provisioning it. It can take a few minutes or hours at times or sometimes never get provisioned. If it is stuck for more then 60 minutes, best option is to delete the stuck pod requesting storage or you can run the daffy rebuild process to get it working in a few hours. What does rebuild.sh do? \u00b6 Rebuild starts over with your cluster using your environment file. Drop Cluster and all resources it created Install new Cluster Install new CP Install all services rebuild.sh requires your env file, that drives all the info it would need. As you can see, it will destroy everything and give you new env, nothing will be saved in cluster.","title":"FAQ"},{"location":"More/FAQ/FAQ/#why-the-name-daffy","text":"Its a great name and mascot.","title":"Why the name Daffy?"},{"location":"More/FAQ/FAQ/#what-is-your-favorite-cloud-pak","text":"Cloud Pak for Business Automation","title":"What is your favorite Cloud Pak?"},{"location":"More/FAQ/FAQ/#can-this-be-run-on-the-xbox-platform","text":"No, sorry.","title":"Can this be run on the XBOX platform?"},{"location":"More/FAQ/FAQ/#daffy-slack-channels","text":"#daffy-user-group","title":"Daffy Slack Channels:"},{"location":"More/FAQ/FAQ/#the-refreshsh-is-hangs-when-i-try-to-update-daffy-code","text":"If the /data/daffy/refresh.sh hangs or does not work, you can run the following command to put latest version of daffy: curl http://get.daffy-installer.com/download-scripts/daffy-init.sh | bash","title":"The refresh.sh is hangs when I try to update daffy code."},{"location":"More/FAQ/FAQ/#i-put-invalid-or-wrong-red-hat-pull-secret-during-the-ocp-install-process-how-do-you-fix","text":"1) Edit your ~/.profile and remove the following line export PULL_SECRET= 2) Save file 3) run this command to remove value from memory unset PULL_SECRET 4) Run the Daffy process again","title":"I put invalid or wrong Red Hat Pull Secret during the OCP install process, how do you fix?"},{"location":"More/FAQ/FAQ/#i-put-invalid-or-wrong-ibm-entitlment-during-the-cp-install-process-how-do-you-fix","text":"1) Edit your ~/.profile and remove the following line export IBM_ENTITLEMENT_KEY= 2) Save file 3) run this command to remove value from memory unset IBM_ENTITLEMENT_KEY 4) Run the Daffy process again","title":"I put invalid or wrong IBM Entitlment during the CP install process, how do you fix?"},{"location":"More/FAQ/FAQ/#how-can-i-create-my-own-bastion","text":"We have a document outlining how to create your own bastion in two ways: (1) through a paid IBM Cloud Account and (2) through IBM Technology Zone. Click here to access the document.","title":"How can I create my own bastion?"},{"location":"More/FAQ/FAQ/#roks-unbound-immediate-persistentvolumeclaims","text":"This means the cluster has requested storage from MSP provider(IBM ROKS) and it is still provisioning it. It can take a few minutes or hours at times or sometimes never get provisioned. If it is stuck for more then 60 minutes, best option is to delete the stuck pod requesting storage or you can run the daffy rebuild process to get it working in a few hours.","title":"ROKS unbound immediate PersistentVolumeClaims"},{"location":"More/FAQ/FAQ/#what-does-rebuildsh-do","text":"Rebuild starts over with your cluster using your environment file. Drop Cluster and all resources it created Install new Cluster Install new CP Install all services rebuild.sh requires your env file, that drives all the info it would need. As you can see, it will destroy everything and give you new env, nothing will be saved in cluster.","title":"What does rebuild.sh do?"},{"location":"More/FAQ/IBM-Entitlement-Keys/","text":"To run software from the IBM Entitled Registry, you must supply your entitlement key as a Kubernetes pull secret. Below are links for customers to obtain trial keys. Components Length Link Cloud Pak for Data 60 days https://www.ibm.com/account/reg/us-en/signup?formid=urx-42212 Cloud Pak for Business Automation 60 days https://www.ibm.com/account/reg/us-en/signup?formid=urx-44505 Cloud Pak for Integration 60 days https://www.ibm.com/account/reg/us-en/signup?formid=urx-46640 Cloud Pak for AIOps 60 days https://www.ibm.com/account/reg/us-en/signup?formid=urx-51074 Cloud Pak for Security 60 days PENDING","title":"IBM Entitlement Keys"},{"location":"Overview/","text":"Demo Video OpenShift install on Azure with Cloud Pak for Data and Watson Knowledge Catalog HTML Video embed","title":"Index"},{"location":"Overview/Tools-Installed/","text":"* { box-sizing: border-box; } .row { margin-left:-5px; margin-right:-5px; } .column { float: left; width: 50%; padding: 5px; } /* Clearfix (clear floats) */ .row::after { content: \"\"; clear: both; display: table; } table { border-collapse: collapse; border-spacing: 0; width: 100%; border: 1px solid #ddd; } th, td { text-align: left; padding: 16px; } tr:nth-child(even) { background-color: #f2f2f2; } Thought out the Daffy process, it will install all support tools it would need. Depending on the step of daffy you are running and feature it uses, the tools are different. If the tool is present already and correct version, it will not be installed. Core Tool When oc always openshfit-install always kubectl always nmon always curl always nano always vim always tree always wget always jq always dnsutils always openssh-client always grepcidr always nfs-kernel-server NFS Option only nfs-common NFS Option only Cloud CLI Tool When awscli AWS Install only azure-cli Azure Install only gcloud GCP Install only cloudctl cloudctl Flag python2 cloudctl Flag python3 cloudctl Flag pip2 cloudctl Flag pip3 cloudctl Flag ibmcloud ROKS & IBM DNS ibm-cp-automation CP4BA Install Only podman CP4BA Install VSphere Tool When rhcos-4.6.XX-x86_64-vmware.x86_64.ova VSphere IPI only rhcos-4.7.XX-x86_64-vmware.x86_64.ova VSphere IPI only rhcos-4.8.XX-x86_64-vmware.x86_64.ova VSphere IPI only rhcos-4.9.XX-x86_64-vmware.x86_64.ova VSphere IPI only rhcos-4.10.XX-x86_64-vmware.x86_64.ova VSphere IPI only govc VSphere Install only Airgap Tool When mirror-registry build local registry only rhcos-4.6.XX-x86_64-live.x86_64.iso build local registry only rhcos-4.7.XX-x86_64-live.x86_64.iso build local registry only rhcos-4.8.XX-x86_64-live.x86_64.iso build local registry only rhcos-4.9.XX-x86_64-live.x86_64.iso build local registry only rhcos-4.10.XX-x86_64-live.x86_64.iso build local registry only UPI Tool When haproxy KVM or VSphere install Only dnsmasq KVM or VSphere install Only KVM Tool When lvm2 KVM install Only bridge-utils KVM install Only qemu-kvm KVM install Only virtinst KVM install Only libvirt-daemon KVM install Only virt-manager KVM install Only cifs-utils KVM install Only libosinfo-bin KVM install Only uvtool KVM install Only matchbox KVM install Only rhcos-live-initramfs.x86_64.img KVM install Only rhcos-live-kernel-x86_64 KVM install Only rhcos-live-rootfs.x86_64.img KVM install Only KVM Dashboard Tool When apache2 VMDashboard Only php VMDashboard Only libapache2-mod-php VMDashboard Only php-mysql VMDashboard Only php-xml VMDashboard Only php-libvirt-php VMDashboard Only python VMDashboard Only","title":"Tools Installed"},{"location":"Request-Forms/","text":"Request Forms \u00b6 POC/Demo/Engagement \u00b6 Please reach out to your IBM technical seller or IBM business partner to request POC/Demo/Engagement Warning For internal IBM use only, please use the following LINK L200 Advanced Training \u00b6 Warning For internal IBM use only, please use the following LINK Getting Involved \u00b6 Warning For internal IBM use only, please use the following LINK Feature Request \u00b6 Warning For internal IBM use only, please use the following LINK","title":"Request Forms"},{"location":"Request-Forms/#request-forms","text":"","title":"Request Forms"},{"location":"Request-Forms/#pocdemoengagement","text":"Please reach out to your IBM technical seller or IBM business partner to request POC/Demo/Engagement Warning For internal IBM use only, please use the following LINK","title":"POC/Demo/Engagement"},{"location":"Request-Forms/#l200-advanced-training","text":"Warning For internal IBM use only, please use the following LINK","title":"L200 Advanced Training"},{"location":"Request-Forms/#getting-involved","text":"Warning For internal IBM use only, please use the following LINK","title":"Getting Involved"},{"location":"Request-Forms/#feature-request","text":"Warning For internal IBM use only, please use the following LINK","title":"Feature Request"},{"location":"Request-Forms/Demo-Request/","text":"","title":"Demo Request"},{"location":"Request-Forms/Feature-Requests/","text":"","title":"Feature Requests"},{"location":"Request-Forms/Get-Involved/","text":"","title":"Get Involved"},{"location":"Request-Forms/L200-Adv-Training/","text":"","title":"L200 Adv Training"},{"location":"Request-Forms/POC-Request-Form/","text":"","title":"POC Request Form"},{"location":"Request-Forms/Training/","text":"Daffy Training/Enablement Request \u00b6 This form is for those interested in being trained on Daffy. This requires your management approval What Market are you part of? What is your IBM role? What is your Cloud Pak focus? Linux skills Openshift skills Training Request Type If group training request, how many attendees? If group, list the name and email address of attendee(s): Please select the date you would like to attend: If outside of the National Market, please select Other for now Checkboxes The input type=\"checkbox\" defines a checkbox: I have a bike I have a car I have a boat","title":"Daffy Training/Enablement Request"},{"location":"Request-Forms/Training/#daffy-trainingenablement-request","text":"This form is for those interested in being trained on Daffy. This requires your management approval What Market are you part of? What is your IBM role? What is your Cloud Pak focus? Linux skills Openshift skills Training Request Type If group training request, how many attendees? If group, list the name and email address of attendee(s): Please select the date you would like to attend: If outside of the National Market, please select Other for now","title":"Daffy Training/Enablement Request"},{"location":"Supporting-Software/","text":"Supporting software Instructions on other software you can install Bastion IBM DB2 IBM LDAP Turbonomics .frame { width: 90%; margin: 40px auto; text-align: center; } button { margin: 5px; } .custom-btn { width: 200px; height: 50px; color: black; border-radius: 10px; padding: 10px 25px; font-family: 'Lato', sans-serif; font-weight: 500; background: transparent; cursor: pointer; transition: all 0.3s ease; position: relative; display: inline-block; box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5), 7px 7px 20px 0px rgba(0,0,0,.1), 4px 4px 5px 0px rgba(0,0,0,.1); outline: none; } /* 7 */ .btn-7 { background: linear-gradient(0deg, rgba(255,151,0,1) 0%, rgba(251,75,2,1) 100%); line-height: 42px; padding: 0; border: none; } .btn-7 span { position: relative; display: block; width: 100%; height: 100%; } .btn-7:before, .btn-7:after { position: absolute; content: \"\"; right: 0; bottom: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7:before{ height: 0%; width: 2px; } .btn-7:after { width: 0%; height: 2px; } .btn-7:hover{ color: rgba(251,75,2,1); background: transparent; } .btn-7:hover:before { height: 100%; } .btn-7:hover:after { width: 100%; } .btn-7 span:before, .btn-7 span:after { position: absolute; content: \"\"; left: 0; top: 0; background: rgba(251,75,2,1); box-shadow: -7px -7px 20px 0px rgba(255,255,255,.9), -4px -4px 5px 0px rgba(255,255,255,.9), 7px 7px 20px 0px rgba(0,0,0,.2), 4px 4px 5px 0px rgba(0,0,0,.3); transition: all 0.3s ease; } .btn-7 span:before { width: 2px; height: 0%; } .btn-7 span:after { height: 2px; width: 0%; } .btn-7 span:hover:before { height: 100%; } .btn-7 span:hover:after { width: 100%; } }","title":"Index"},{"location":"Supporting-Software/Bastion/","text":"What is a bastion server? \u00b6 A bastion host is a server whose purpose is to provide access to a private network from an external network, such as the Internet. Because of its exposure to potential attack, a bastion host must minimize the chances of penetration. Openshift uses a bastion to help create a running cluster. A bastion can be reused for multiple clusters. In some scenarios for POC purposes such as User Provisioned Infrastructure (UPI), the bastion can be used as the proxy to the cluster. Bastion servers can be installed anywhere. This guide assumes the bastion server is Ubuntu 20.04 Minimal and will be in the IBM Cloud. Requirements for completing this task is to have an IBMid, an IBM cloud account, and a local SSH key. For more information, go to Daffy Prerequisites. Detailed below are the instructions to build your own bastion to do an IPI or MSP install. IBM Cloud \u00b6 First, open a web browser and go to http://cloud.ibm.com Enter your id and click 'Continue' Once logged in, select 'Catalog' in the top menu bar Once the Catalog is loaded, select 'Compute' or search the catalog for Virtual Servers. Select 'Virtual Server for Classic' Alternative: Skip step 3 and search for \"virtual server\", choosing \"virtual server for classic\". Both options achieve the same thing. Fill out the details. (Public, hostname can be anything, and so can domain \u2013 feel free to leave what is there originally for your domain). Choose your billing method based on needs to be either Hourly or Monthly (~$40/mo.) and choose a Location. Scroll down and fill out the remainder of the information. Choose a server type and select your SSH key so you can login. Finally, make sure you have the Ubuntu 20.04 Operating System selected. Note: You can use any other available tool to create a key if needed Click the agreement on the right-hand pane and select 'Create' This will take you to a device page. You can search for your bastion you have created. Once your server is done provisioning and has a start date, you can login to it via Termius using the Public IP address. **If connecting to a VPN to connect to the network, you will use the Private IP address, but Public will be used more frequently. Create a new host in Termius: use your SSH key as the password , use root as the username , input the Public IP Address from the device list as your host's address, and create a label. **If you don't use a SSH Key, you can go into the details of the bastion you created by double clicking on it and going to the passwords section. This password will not show until provisioning is complete. Once you have connected your bastion to Termius , install Daffy to the terminal of your newly created host. IBM Technology Zone \u00b6 An alternative to creating a bastion using a paid IBM Cloud account is to use IBM Technology Zone. There are three options with TechZone Warning For internal IBM or Business partner use only Use this link to navigate to IBM Technology Zone: https://techzone.ibm.com/collection/base-images Scroll down to environments, and choose IBM Virtual Server Instance (Classic) From there, complete your reservation. Make sure to fill out items 1 \u2013 4 , leaving the other fields blank .","title":"Bastion"},{"location":"Supporting-Software/Bastion/#what-is-a-bastion-server","text":"A bastion host is a server whose purpose is to provide access to a private network from an external network, such as the Internet. Because of its exposure to potential attack, a bastion host must minimize the chances of penetration. Openshift uses a bastion to help create a running cluster. A bastion can be reused for multiple clusters. In some scenarios for POC purposes such as User Provisioned Infrastructure (UPI), the bastion can be used as the proxy to the cluster. Bastion servers can be installed anywhere. This guide assumes the bastion server is Ubuntu 20.04 Minimal and will be in the IBM Cloud. Requirements for completing this task is to have an IBMid, an IBM cloud account, and a local SSH key. For more information, go to Daffy Prerequisites. Detailed below are the instructions to build your own bastion to do an IPI or MSP install.","title":"What is a bastion server?"},{"location":"Supporting-Software/Bastion/#ibm-cloud","text":"First, open a web browser and go to http://cloud.ibm.com Enter your id and click 'Continue' Once logged in, select 'Catalog' in the top menu bar Once the Catalog is loaded, select 'Compute' or search the catalog for Virtual Servers. Select 'Virtual Server for Classic' Alternative: Skip step 3 and search for \"virtual server\", choosing \"virtual server for classic\". Both options achieve the same thing. Fill out the details. (Public, hostname can be anything, and so can domain \u2013 feel free to leave what is there originally for your domain). Choose your billing method based on needs to be either Hourly or Monthly (~$40/mo.) and choose a Location. Scroll down and fill out the remainder of the information. Choose a server type and select your SSH key so you can login. Finally, make sure you have the Ubuntu 20.04 Operating System selected. Note: You can use any other available tool to create a key if needed Click the agreement on the right-hand pane and select 'Create' This will take you to a device page. You can search for your bastion you have created. Once your server is done provisioning and has a start date, you can login to it via Termius using the Public IP address. **If connecting to a VPN to connect to the network, you will use the Private IP address, but Public will be used more frequently. Create a new host in Termius: use your SSH key as the password , use root as the username , input the Public IP Address from the device list as your host's address, and create a label. **If you don't use a SSH Key, you can go into the details of the bastion you created by double clicking on it and going to the passwords section. This password will not show until provisioning is complete. Once you have connected your bastion to Termius , install Daffy to the terminal of your newly created host.","title":"IBM Cloud"},{"location":"Supporting-Software/Bastion/#ibm-technology-zone","text":"An alternative to creating a bastion using a paid IBM Cloud account is to use IBM Technology Zone. There are three options with TechZone Warning For internal IBM or Business partner use only Use this link to navigate to IBM Technology Zone: https://techzone.ibm.com/collection/base-images Scroll down to environments, and choose IBM Virtual Server Instance (Classic) From there, complete your reservation. Make sure to fill out items 1 \u2013 4 , leaving the other fields blank .","title":"IBM Technology Zone"},{"location":"Supporting-Software/DB2/","text":"With the Daffy system you can now install DB2 on a Linux server. RHEL 8.x or Ubuntu 20.0.4. You will need to size the server based on your needs for the Database. Below are the steps you would need to get the software, install it and check on the status of the install. Obtain Software \u00b6 Before you install DB2, you will need to download the DB2 Software and place the binary's on your Linux server. 1) Customer can download the software via the Passport Advantage site. 2) Tech Sellers can download it from IBM Internal DSW Downloads . You will need to search for the part number CC1U0ML , this is the DB2 Software that will be used during the install. Once you get the software, you will need to upload it to the Linux server where you plan to install it. By default, it will need to be in the following location: /data/software/db2 You can override this base location ( /data/software ) by overriding it in your environment file. SOFTWARE_INSTALLS_DIR= Install DB2 \u00b6 Installing DB2 needs one new values to your environment file ( -env.sh). DB2_VERSION With this value, the daffy engine will be able to install the version of DB2. Valid Options: DB2_VERSION: 11.5 DB2_VERSION=\"11.5\" Once you have the requires values in your environment file and the sofware was placed on the Linux server, you are ready to kick off the install. Below is the command to kick off the install. The process should take approx 10 min to install. /data/daffy/db2/build.sh <ENVIRONMENT_NAME> Help \u00b6 There are a few options that the Daffy DB2 installer has to help with install and post install. To see the options you can run the following command: /data/daffy/db2/build.sh <ENVIRONMENT_NAME> --help If you need to test is you have correct info to install DB2 on this host, You can run the following command /data/daffy/db2/build.sh <ENVIRONMENT_NAME> --precheck If you need to display connect info for DB2, user name password port, etc. You can run the following command /data/daffy/db2/build.sh <ENVIRONMENT_NAME> --console","title":"DB2"},{"location":"Supporting-Software/DB2/#obtain-software","text":"Before you install DB2, you will need to download the DB2 Software and place the binary's on your Linux server. 1) Customer can download the software via the Passport Advantage site. 2) Tech Sellers can download it from IBM Internal DSW Downloads . You will need to search for the part number CC1U0ML , this is the DB2 Software that will be used during the install. Once you get the software, you will need to upload it to the Linux server where you plan to install it. By default, it will need to be in the following location: /data/software/db2 You can override this base location ( /data/software ) by overriding it in your environment file. SOFTWARE_INSTALLS_DIR=","title":"Obtain Software"},{"location":"Supporting-Software/DB2/#install-db2","text":"Installing DB2 needs one new values to your environment file ( -env.sh). DB2_VERSION With this value, the daffy engine will be able to install the version of DB2. Valid Options: DB2_VERSION: 11.5 DB2_VERSION=\"11.5\" Once you have the requires values in your environment file and the sofware was placed on the Linux server, you are ready to kick off the install. Below is the command to kick off the install. The process should take approx 10 min to install. /data/daffy/db2/build.sh <ENVIRONMENT_NAME>","title":"Install DB2"},{"location":"Supporting-Software/DB2/#help","text":"There are a few options that the Daffy DB2 installer has to help with install and post install. To see the options you can run the following command: /data/daffy/db2/build.sh <ENVIRONMENT_NAME> --help If you need to test is you have correct info to install DB2 on this host, You can run the following command /data/daffy/db2/build.sh <ENVIRONMENT_NAME> --precheck If you need to display connect info for DB2, user name password port, etc. You can run the following command /data/daffy/db2/build.sh <ENVIRONMENT_NAME> --console","title":"Help"},{"location":"Supporting-Software/IBM-LDAP/","text":"With the Daffy system you can now install IBM LDAP server on a Linux server. RHEL 8.x. You will need to size the server based on your needs for the Database. Below are the steps you would need to get the software, install it and check on the status of the install. Obtain Software \u00b6 Before you install IBM LDAP you will need to download the IBM LDAP Software and place the binary's on your Linux server. 1) Customer can download the software via the Passport Advantage site. 2) Tech Sellers can download it from IBM Internal DSW Downloads . You will need to search for two part numbers CN487ML and CN4VJML , this is the IBM LDAP Software that will be used during the install. Once you get the software, you will need to upload it to the Linux server where you plan to install it. By default, it will need to be in the following location: /data/software/ldap You can override this base location (/data/software) by overriding it in your environment file. SOFTWARE_INSTALLS_DIR= Install LDAP \u00b6 Installing LDAP needs one new values to your environment file ( -env.sh). IDS_VERSION= With this value, the daffy engine will be able to install the version of IDS(LDAP). ** The IBM LDAP Software is only supported on IBM RHEL. Valid Options: IDS_VERSION 6.4 IDS_VERSION=\"6.4\" /data/daffy/ldap/build.sh <ENVIRONMENT_NAME> Help \u00b6 There are a few options that the Daffy IBM LDAP installer has to help with install and post install. To see the options you can run the following command: /data/daffy/ldap/build.sh <ENVIRONMENT_NAME> --help If you need to test is you have correct info to install IBM LDAP on this host, You can run the following command /data/daffy/ldap/build.sh <ENVIRONMENT_NAME> --precheck If you need to display connect info for IBM LDAP , user name password port, etc. You can run the following command /data/daffy/ldap/build.sh <ENVIRONMENT_NAME> --console","title":"IBM LDAP"},{"location":"Supporting-Software/IBM-LDAP/#obtain-software","text":"Before you install IBM LDAP you will need to download the IBM LDAP Software and place the binary's on your Linux server. 1) Customer can download the software via the Passport Advantage site. 2) Tech Sellers can download it from IBM Internal DSW Downloads . You will need to search for two part numbers CN487ML and CN4VJML , this is the IBM LDAP Software that will be used during the install. Once you get the software, you will need to upload it to the Linux server where you plan to install it. By default, it will need to be in the following location: /data/software/ldap You can override this base location (/data/software) by overriding it in your environment file. SOFTWARE_INSTALLS_DIR=","title":"Obtain Software"},{"location":"Supporting-Software/IBM-LDAP/#install-ldap","text":"Installing LDAP needs one new values to your environment file ( -env.sh). IDS_VERSION= With this value, the daffy engine will be able to install the version of IDS(LDAP). ** The IBM LDAP Software is only supported on IBM RHEL. Valid Options: IDS_VERSION 6.4 IDS_VERSION=\"6.4\" /data/daffy/ldap/build.sh <ENVIRONMENT_NAME>","title":"Install LDAP"},{"location":"Supporting-Software/IBM-LDAP/#help","text":"There are a few options that the Daffy IBM LDAP installer has to help with install and post install. To see the options you can run the following command: /data/daffy/ldap/build.sh <ENVIRONMENT_NAME> --help If you need to test is you have correct info to install IBM LDAP on this host, You can run the following command /data/daffy/ldap/build.sh <ENVIRONMENT_NAME> --precheck If you need to display connect info for IBM LDAP , user name password port, etc. You can run the following command /data/daffy/ldap/build.sh <ENVIRONMENT_NAME> --console","title":"Help"},{"location":"Supporting-Software/Turbo/","text":"Turbonomic \u00b6","title":"Turbo"},{"location":"Supporting-Software/Turbo/#turbonomic","text":"","title":"Turbonomic"},{"location":"Tips-%26-Tricks/Common-Issues/","text":"Your environment file name must follow simple rules. \u00b6 All lower case no spaces Alphanumeric or - (no special characters) Must end in -env.sh Environment name is the prefix for the file name Environment Name File Name Status Reason lab12 /data/daffy/env/lab12-env.sh VALID Perfect lab12 /data/daffy/env/lab12-env INVALID Does not end in .sh lab12 /data/daffy/env/lab12 INVALID Does not end in -env.sh lab12 /data/daffy/env/Lab 12-env.sh INVALID Upper case and Space in name lab12 /data/daffy/env/lab-env.sh INVALID Environment name does not match file prefix lab12 /data/daffy/lab12-env.sh INVALID Not in the /data/daffy/env folder","title":"Common Issues"},{"location":"Tips-%26-Tricks/Common-Issues/#your-environment-file-name-must-follow-simple-rules","text":"All lower case no spaces Alphanumeric or - (no special characters) Must end in -env.sh Environment name is the prefix for the file name Environment Name File Name Status Reason lab12 /data/daffy/env/lab12-env.sh VALID Perfect lab12 /data/daffy/env/lab12-env INVALID Does not end in .sh lab12 /data/daffy/env/lab12 INVALID Does not end in -env.sh lab12 /data/daffy/env/Lab 12-env.sh INVALID Upper case and Space in name lab12 /data/daffy/env/lab-env.sh INVALID Environment name does not match file prefix lab12 /data/daffy/lab12-env.sh INVALID Not in the /data/daffy/env folder","title":"Your environment file name must follow simple rules."},{"location":"Tips-%26-Tricks/Edit-Files/","text":"Editing Files \u00b6 Basic vi commands you will use to edit your environment file: \u00b6 Use the arrows on your keyboard to go to location you want to edit, you can not use your mouse. [ESC] starts all modes and [ESC] will end all modes. Modes: [ESC] x = deletes one character where you cursor is. Once done [ESC] [ESC] i = puts you in insert mode, just start typing what you want to add. Once done [ESC] [ESC] dd = delete entire line cursor is on. Once done [ESC] [ESC] u = will undo your last action. Once done [ESC] Once done, the following will save your file: [ESC] [SHIFT] : wq [ENTER] If you messed up the file and you want to exit and not save your file: [ESC] [SHIFT] : q! [ENTER] VI Cheat-sheet - https://www.atmos.albany.edu/daes/atmclasses/atm350/vi_cheat_sheet.pdf Nano Cheat-sheet https://itsfoss.com/nano-editor-guide/","title":"Edit Files"},{"location":"Tips-%26-Tricks/Edit-Files/#editing-files","text":"","title":"Editing Files"},{"location":"Tips-%26-Tricks/Edit-Files/#basic-vi-commands-you-will-use-to-edit-your-environment-file","text":"Use the arrows on your keyboard to go to location you want to edit, you can not use your mouse. [ESC] starts all modes and [ESC] will end all modes. Modes: [ESC] x = deletes one character where you cursor is. Once done [ESC] [ESC] i = puts you in insert mode, just start typing what you want to add. Once done [ESC] [ESC] dd = delete entire line cursor is on. Once done [ESC] [ESC] u = will undo your last action. Once done [ESC] Once done, the following will save your file: [ESC] [SHIFT] : wq [ENTER] If you messed up the file and you want to exit and not save your file: [ESC] [SHIFT] : q! [ENTER] VI Cheat-sheet - https://www.atmos.albany.edu/daes/atmclasses/atm350/vi_cheat_sheet.pdf Nano Cheat-sheet https://itsfoss.com/nano-editor-guide/","title":"Basic vi commands you will use to edit your environment file:"},{"location":"Tips-%26-Tricks/Environment-File/","text":"Your environment file name must follow simple rules: \u00b6 All lower case no spaces Alphanumeric or - (no special characters) Must end in -env.sh Environment name is the prefix for the file name","title":"Environment File"},{"location":"Tips-%26-Tricks/Environment-File/#your-environment-file-name-must-follow-simple-rules","text":"All lower case no spaces Alphanumeric or - (no special characters) Must end in -env.sh Environment name is the prefix for the file name","title":"Your environment file name must follow simple rules:"},{"location":"hidden/","text":"","title":"Index"}]}